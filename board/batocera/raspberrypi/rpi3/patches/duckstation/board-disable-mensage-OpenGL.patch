diff --git a/src/core/gpu_hw_opengl.cpp b/src/core/gpu_hw_opengl.cpp
index f0078ba..db715f4 100644
--- a/src/core/gpu_hw_opengl.cpp
+++ b/src/core/gpu_hw_opengl.cpp
@@ -54,11 +54,7 @@ bool GPU_HW_OpenGL::Initialize(HostDisplay* host_display)
       (GLAD_GL_VERSION_3_0 || GLAD_GL_ARB_uniform_buffer_object)) ||
      (host_display->GetRenderAPI() == HostDisplay::RenderAPI::OpenGLES && GLAD_GL_ES_VERSION_3_0));
   if (!opengl_is_available)
-  {
-    g_host_interface->AddOSDMessage(
-      g_host_interface->TranslateStdString("OSDMessage", "OpenGL renderer unavailable, your driver or hardware is not "
-                                                         "recent enough. OpenGL 3.1 or OpenGL ES 3.0 is required."),
-      20.0f);
+  {    
     return false;
   }
 
diff --git a/src/core/system.cpp b/src/core/system.cpp
index 50380ae..1143776 100644
--- a/src/core/system.cpp
+++ b/src/core/system.cpp
@@ -1014,11 +1014,6 @@ bool CreateGPU(GPURenderer renderer)
   {
     Log_ErrorPrintf("Failed to initialize %s renderer, falling back to software renderer",
                     Settings::GetRendererName(renderer));
-    g_host_interface->AddFormattedOSDMessage(
-      30.0f,
-      g_host_interface->TranslateString("OSDMessage",
-                                        "Failed to initialize %s renderer, falling back to software renderer."),
-      Settings::GetRendererName(renderer));
     g_gpu.reset();
     g_gpu = GPU::CreateSoftwareRenderer();
     if (!g_gpu->Initialize(g_host_interface->GetDisplay()))
