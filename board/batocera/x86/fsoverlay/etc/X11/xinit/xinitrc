#!/bin/sh

# hide mouse cursor
unclutter --noevents -b

# set the keyboard
settings_lang="$(/usr/bin/batocera-settings-get system.language)"
[ -z "${settings_lang}" ] && settings_lang=en_US

# not always true (en_US for us), but it's really better than always english
map_name=$(echo $settings_lang | cut -c 1-2)
setxkbmap "${map_name}"

# disable dpms to prevent screen from blanking
xset -dpms
xset s off

# environment
export HOME=/userdata/system
export LC_ALL="${settings_lang}.UTF-8"
export LANG=${LC_ALL}

# because of xinerama breaking es, enable only one screen at a time
settings_output="$(/usr/bin/batocera-settings-get global.videooutput)"
batocera-resolution setOutput "${settings_output}" # empty or invalid values defaults to the first valid

# dpi override for nvidia gpus
settings_output="$(/usr/bin/batocera-settings-get global.dpi)"
[ ! -z "${settings_output}" ] && batocera-resolution setDPI "${settings_output}"

#####################
## CUSTOMISATIONS ###
# to customize your display, you can copy this file to ~/.xinitrc and then modify it
# You can also use display.rotate in batocera.conf (see below)
#
# rotate the screen
# xrandr -o left
# xrandr -o right
# xrandr -o inverted

# change the resolution
# xrandr -s 640x480

# change the resolution and the Hz
# xrandr -s 640x480 -r 60

#####################
#####################

# try to force 60hz
xrandr -r 60

# set user desired resolution
# nice workaround for displays which tell X11 to use strange resolutions
settings_output="$(/usr/bin/batocera-settings-get -f /boot/batocera-boot.conf es.resolution)"
if [ -z "${settings_output}" ]
then
    batocera-resolution minTomaxResolution-secure
else
    batocera-resolution setMode "${settings_output}"
fi

# allow coredumps for ES
ulimit -H -c unlimited
ulimit -S -c unlimited emulationstation

# dbus launch is required for the gio/gvfs/trash:///...
eval `dbus-launch --sh-syntax --exit-with-session`

# rotation
display_rotate="$(/usr/bin/batocera-settings-get display.rotate)"
EXTRA_OPTS=
ARCH="$(cat /usr/share/batocera/batocera.arch)"
if test -n "${display_rotate}"; then
	case "${ARCH}" in
		x86_64|x86)
			case "${display_rotate}" in
				"1")
					xrandr -o right
					;;
				"2")
					xrandr -o inverted
					;;
				"3")
					xrandr -o left
					;;
			esac
			;;
		*)
			EXTRA_OPTS="--screenrotate ${display_rotate}"
			;;
	esac
fi

forcedresolution="$(/usr/bin/batocera-settings-get -f /boot/batocera-boot.conf es.forcedresolution)"
if test -n "${forcedresolution}"
then
	export DISPLAY=:0.0
	batocera-resolution forceMode "${forcedresolution}"
fi

# nvidia
# these are 3 variables used only by nvidia to take nvidia gpu over intel cards when such hybrid cards are available
nvidia_driver="$(/usr/bin/batocera-settings-get -f /boot/batocera-boot.conf nvidia-driver)"
if test "${nvidia_driver}" = "true"
then
    nvidia_prime="$(/usr/bin/batocera-settings-get -f /boot/batocera-boot.conf nvidia-prime)"
    if test "${nvidia_prime}" = "true"
    then
	export __NV_PRIME_RENDER_OFFLOAD=1
	export __VK_LAYER_NV_optimus=NVIDIA_only
	export __GLX_VENDOR_LIBRARY_NAME=nvidia
    fi
fi

# Fix xterm via F4 is not previously set up
python << EOF
import configparser
F = '/userdata/system/.config/libfm/libfm.conf'
c = configparser.ConfigParser()
c.read(F)
try:
   t = c['config']['terminal']
except:
   t = None
if (not t or t == ''):
   with open(F, 'w') as wf:
     c['config']['terminal'] = 'xterm'
     c.write(wf)
EOF

cd /userdata # es needs a PWD
openbox --config-file /etc/openbox/rc.xml --startup "emulationstation --windowed ${EXTRA_OPTS}"
