--- a/libswirl/hw/pvr/ta.cpp	2020-08-13 20:17:39.355060140 +0200
+++ b/libswirl/hw/pvr/ta.cpp	2020-08-13 20:31:17.666841648 +0200
@@ -28,20 +28,13 @@
 
 #if HOST_CPU == CPU_X86
 #include <xmmintrin.h>
-struct simd256_t
-{
-	DECL_ALIGN(32) __m128 data[2];
-};
 #elif HOST_CPU == CPU_ARM && defined(__ARM_NEON__)
 #include <arm_neon.h>
-struct simd256_t
-{
-	DECL_ALIGN(32) uint64x2_t data[2];
-};
+typedef uint64x2_t simd128_t;
 #else
-struct simd256_t
+struct simd128_t
 {
-DECL_ALIGN(32) u64 data[4];
+ DECL_ALIGN(32) u64 data[2];
 };
 #endif
 
@@ -307,14 +300,16 @@
 		ta_vtx_ListInit();
 	}
 
-	simd256_t* dst = (simd256_t*)ta_tad.thd_data;
-	simd256_t* src = (simd256_t*)data;
+	simd128_t* dst = (simd128_t*)ta_tad.thd_data;
+	simd128_t* src = (simd128_t*)data;
 
 	// First byte is PCW
-	PCW pcw = *(PCW*)data;
-	
+	PCW pcw = *(PCW*)src;
+
 	// Copy the TA data
-	*dst = *src;
+	dst[0] = src[0];
+	dst[1] = src[1];
+
 
 	ta_tad.thd_data += 32;
 
@@ -326,7 +321,7 @@
 	bool must_handle = trans & 0xF0;
 
 
-	if (likely(!must_handle))
+	if (!unlikely(must_handle))
 	{
 		return;
 	}
