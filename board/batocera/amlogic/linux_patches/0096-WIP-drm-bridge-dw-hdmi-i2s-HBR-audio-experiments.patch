From c41d810aabc5158bfe2a8525cff3b17d8d93e827 Mon Sep 17 00:00:00 2001
From: chewitt <christianshewitt@gmail.com>
Date: Tue, 7 Jul 2020 15:24:33 +0000
Subject: [PATCH 096/118] WIP: drm/bridge: dw-hdmi-i2s: HBR audio experiments

---
 .../drm/bridge/synopsys/dw-hdmi-i2s-audio.c   | 21 +++++++++++++++++--
 drivers/gpu/drm/bridge/synopsys/dw-hdmi.h     |  5 +++++
 include/sound/hdmi-codec.h                    |  1 +
 sound/soc/codecs/hdmi-codec.c                 |  4 +++-
 sound/soc/meson/aiu-acodec-ctrl.c             |  2 +-
 sound/soc/meson/aiu-codec-ctrl.c              |  2 +-
 sound/soc/meson/aiu.h                         |  3 ++-
 sound/soc/meson/axg-tdm.h                     |  3 ++-
 sound/soc/meson/g12a-tohdmitx.c               |  2 +-
 9 files changed, 35 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-i2s-audio.c b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-i2s-audio.c
index 9fef6413741d..6431bc6b6ca6 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi-i2s-audio.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi-i2s-audio.c
@@ -40,8 +40,11 @@ static int dw_hdmi_i2s_hw_params(struct device *dev, void *data,
 {
 	struct dw_hdmi_i2s_audio_data *audio = data;
 	struct dw_hdmi *hdmi = audio->hdmi;
+	int sample_width = hparms->sample_width;
+	int ca = hparms->cea.channel_allocation;
 	u8 conf0 = 0;
 	u8 conf1 = 0;
+	u8 conf2 = 0;
 	u8 inputclkfs = 0;
 
 	/* it cares I2S only */
@@ -57,6 +60,17 @@ static int dw_hdmi_i2s_hw_params(struct device *dev, void *data,
 	inputclkfs	= HDMI_AUD_INPUTCLKFS_64FS;
 	conf0		= (HDMI_AUD_CONF0_I2S_SELECT | HDMI_AUD_CONF0_I2S_EN0);
 
+	if (hparms->format == SNDRV_PCM_FORMAT_IEC958_SUBFRAME_LE) {
+		conf2 |= HDMI_AUD_CONF2_NLPCM;
+		if (hparms->channels == 8)
+			conf2 |= HDMI_AUD_CONF2_HBR;
+
+		sample_width = 21;
+		ca = 0;
+	}
+
+	hdmi_write(audio, conf2, HDMI_AUD_CONF2);
+
 	/* Enable the required i2s lanes */
 	switch (hparms->channels) {
 	case 7 ... 8:
@@ -70,10 +84,13 @@ static int dw_hdmi_i2s_hw_params(struct device *dev, void *data,
 		/* Fall-thru */
 	}
 
-	switch (hparms->sample_width) {
+	switch (sample_width) {
 	case 16:
 		conf1 = HDMI_AUD_CONF1_WIDTH_16;
 		break;
+	case 21:
+		conf1 = HDMI_AUD_CONF1_WIDTH_21;
+		break;
 	case 24:
 	case 32:
 		conf1 = HDMI_AUD_CONF1_WIDTH_24;
@@ -104,7 +121,7 @@ static int dw_hdmi_i2s_hw_params(struct device *dev, void *data,
 	dw_hdmi_set_sample_rate(hdmi, hparms->sample_rate);
 	dw_hdmi_set_channel_status(hdmi, hparms->iec.status);
 	dw_hdmi_set_channel_count(hdmi, hparms->channels);
-	dw_hdmi_set_channel_allocation(hdmi, hparms->cea.channel_allocation);
+	dw_hdmi_set_channel_allocation(hdmi, ca);
 
 	hdmi_write(audio, inputclkfs, HDMI_AUD_INPUTCLKFS);
 	hdmi_write(audio, conf0, HDMI_AUD_CONF0);
diff --git a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h
index 1999db05bc3b..bff849a336f7 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h
+++ b/drivers/gpu/drm/bridge/synopsys/dw-hdmi.h
@@ -917,8 +917,13 @@ enum {
 	HDMI_AUD_CONF1_MODE_BURST_1 = 0x60,
 	HDMI_AUD_CONF1_MODE_BURST_2 = 0x80,
 	HDMI_AUD_CONF1_WIDTH_16 = 0x10,
+	HDMI_AUD_CONF1_WIDTH_21 = 0x15,
 	HDMI_AUD_CONF1_WIDTH_24 = 0x18,
 
+/* AUD_CONF1 field values */
+	HDMI_AUD_CONF2_NLPCM = 0x02,
+	HDMI_AUD_CONF2_HBR = 0x01,
+
 /* AUD_CTS3 field values */
 	HDMI_AUD_CTS3_N_SHIFT_OFFSET = 5,
 	HDMI_AUD_CTS3_N_SHIFT_MASK = 0xe0,
diff --git a/include/sound/hdmi-codec.h b/include/sound/hdmi-codec.h
index b55970859a13..c3bd757375e9 100644
--- a/include/sound/hdmi-codec.h
+++ b/include/sound/hdmi-codec.h
@@ -45,6 +45,7 @@ struct hdmi_codec_params {
 	int sample_rate;
 	int sample_width;
 	int channels;
+	snd_pcm_format_t format;
 };
 
 typedef void (*hdmi_codec_plugged_cb)(struct device *dev,
diff --git a/sound/soc/codecs/hdmi-codec.c b/sound/soc/codecs/hdmi-codec.c
index 403d4c6a49a8..25402d50a658 100644
--- a/sound/soc/codecs/hdmi-codec.c
+++ b/sound/soc/codecs/hdmi-codec.c
@@ -486,6 +486,7 @@ static int hdmi_codec_hw_params(struct snd_pcm_substream *substream,
 	hp.sample_width = params_width(params);
 	hp.sample_rate = params_rate(params);
 	hp.channels = params_channels(params);
+	hp.format = params_format(params);
 
 	return hcp->hcd.ops->hw_params(dai->dev->parent, hcp->hcd.data,
 				       cf, &hp);
@@ -615,7 +616,8 @@ static const struct snd_soc_dai_ops hdmi_codec_spdif_dai_ops = {
 			 SNDRV_PCM_FMTBIT_S20_3LE | SNDRV_PCM_FMTBIT_S20_3BE |\
 			 SNDRV_PCM_FMTBIT_S24_3LE | SNDRV_PCM_FMTBIT_S24_3BE |\
 			 SNDRV_PCM_FMTBIT_S24_LE | SNDRV_PCM_FMTBIT_S24_BE |\
-			 SNDRV_PCM_FMTBIT_S32_LE | SNDRV_PCM_FMTBIT_S32_BE)
+			 SNDRV_PCM_FMTBIT_S32_LE | SNDRV_PCM_FMTBIT_S32_BE |\
+			 SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
 
 static int hdmi_codec_pcm_new(struct snd_soc_pcm_runtime *rtd,
 			      struct snd_soc_dai *dai)
diff --git a/sound/soc/meson/aiu-acodec-ctrl.c b/sound/soc/meson/aiu-acodec-ctrl.c
index 7078197e0cc5..7b1356b4c891 100644
--- a/sound/soc/meson/aiu-acodec-ctrl.c
+++ b/sound/soc/meson/aiu-acodec-ctrl.c
@@ -114,7 +114,7 @@ static const struct snd_soc_dai_ops aiu_acodec_ctrl_output_ops = {
 #define AIU_ACODEC_CTRL_FORMATS					\
 	(SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S20_3LE |	\
 	 SNDRV_PCM_FMTBIT_S24_3LE | SNDRV_PCM_FMTBIT_S24_LE |	\
-	 SNDRV_PCM_FMTBIT_S32_LE)
+	 SNDRV_PCM_FMTBIT_S32_LE | SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
 
 #define AIU_ACODEC_STREAM(xname, xsuffix, xchmax)		\
 {								\
diff --git a/sound/soc/meson/aiu-codec-ctrl.c b/sound/soc/meson/aiu-codec-ctrl.c
index 4b773d3e8b07..c41be9302afd 100644
--- a/sound/soc/meson/aiu-codec-ctrl.c
+++ b/sound/soc/meson/aiu-codec-ctrl.c
@@ -86,7 +86,7 @@ static const struct snd_soc_dai_ops aiu_codec_ctrl_output_ops = {
 #define AIU_CODEC_CTRL_FORMATS					\
 	(SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S20_3LE |	\
 	 SNDRV_PCM_FMTBIT_S24_3LE | SNDRV_PCM_FMTBIT_S24_LE |	\
-	 SNDRV_PCM_FMTBIT_S32_LE)
+	 SNDRV_PCM_FMTBIT_S32_LE | SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
 
 #define AIU_CODEC_CTRL_STREAM(xname, xsuffix)			\
 {								\
diff --git a/sound/soc/meson/aiu.h b/sound/soc/meson/aiu.h
index 87aa19ac4af3..a52169d4ae9d 100644
--- a/sound/soc/meson/aiu.h
+++ b/sound/soc/meson/aiu.h
@@ -42,7 +42,8 @@ struct aiu {
 
 #define AIU_FORMATS (SNDRV_PCM_FMTBIT_S16_LE |	\
 		     SNDRV_PCM_FMTBIT_S20_LE |	\
-		     SNDRV_PCM_FMTBIT_S24_LE)
+		     SNDRV_PCM_FMTBIT_S24_LE |  \
+		     SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
 
 int aiu_of_xlate_dai_name(struct snd_soc_component *component,
 			  struct of_phandle_args *args,
diff --git a/sound/soc/meson/axg-tdm.h b/sound/soc/meson/axg-tdm.h
index 5774ce0916d4..b2218203023b 100644
--- a/sound/soc/meson/axg-tdm.h
+++ b/sound/soc/meson/axg-tdm.h
@@ -21,7 +21,8 @@
 				 SNDRV_PCM_FMTBIT_S16_LE |	\
 				 SNDRV_PCM_FMTBIT_S20_LE |	\
 				 SNDRV_PCM_FMTBIT_S24_LE |	\
-				 SNDRV_PCM_FMTBIT_S32_LE)
+				 SNDRV_PCM_FMTBIT_S32_LE |      \
+				 SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
 
 struct axg_tdm_iface {
 	struct clk *sclk;
diff --git a/sound/soc/meson/g12a-tohdmitx.c b/sound/soc/meson/g12a-tohdmitx.c
index 9b2b59536ced..ae07ca57623e 100644
--- a/sound/soc/meson/g12a-tohdmitx.c
+++ b/sound/soc/meson/g12a-tohdmitx.c
@@ -155,7 +155,7 @@ static const struct snd_soc_dai_ops g12a_tohdmitx_output_ops = {
 #define TOHDMITX_I2S_FORMATS					\
 	(SNDRV_PCM_FMTBIT_S16_LE | SNDRV_PCM_FMTBIT_S20_3LE |	\
 	 SNDRV_PCM_FMTBIT_S24_3LE | SNDRV_PCM_FMTBIT_S24_LE |	\
-	 SNDRV_PCM_FMTBIT_S32_LE)
+	 SNDRV_PCM_FMTBIT_S32_LE | SNDRV_PCM_FMTBIT_IEC958_SUBFRAME_LE)
 
 #define TOHDMITX_STREAM(xname, xsuffix, xfmt, xchmax)		\
 {								\
-- 
2.31.1

