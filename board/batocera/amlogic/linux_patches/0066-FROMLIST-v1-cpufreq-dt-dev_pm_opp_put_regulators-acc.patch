From d9363c687bc5016be9c271a958670433b637b0de Mon Sep 17 00:00:00 2001
From: Viresh Kumar <viresh.kumar@linaro.org>
Date: Thu, 26 Nov 2020 06:18:02 +0000
Subject: [PATCH 066/118] FROMLIST(v1): cpufreq: dt:
 dev_pm_opp_put_regulators() accepts NULL argument

The dev_pm_opp_put_*() APIs now accepts a NULL opp_table pointer and so
there is no need for us to carry the extra checks. Drop them.

Signed-off-by: Viresh Kumar <viresh.kumar@linaro.org>
---
 drivers/cpufreq/cpufreq-dt.c | 6 ++----
 1 file changed, 2 insertions(+), 4 deletions(-)

diff --git a/drivers/cpufreq/cpufreq-dt.c b/drivers/cpufreq/cpufreq-dt.c
index e363ae04aac6..7f37d40179fe 100644
--- a/drivers/cpufreq/cpufreq-dt.c
+++ b/drivers/cpufreq/cpufreq-dt.c
@@ -312,8 +312,7 @@ static int dt_cpufreq_early_init(struct device *dev, int cpu)
 	return 0;
 
 put_reg:
-	if (priv->reg_opp_table)
-		dev_pm_opp_put_regulators(priv->reg_opp_table);
+	dev_pm_opp_put_regulators(priv->opp_table);
 put_table:
 	dev_pm_opp_put_opp_table(priv->opp_table);
 free_cpumask:
@@ -326,8 +325,7 @@ static void dt_cpufreq_release(void)
 	struct private_data *priv, *tmp;
 
 	list_for_each_entry_safe(priv, tmp, &priv_list, node) {
-		if (priv->reg_opp_table)
-			dev_pm_opp_put_regulators(priv->reg_opp_table);
+		dev_pm_opp_put_regulators(priv->opp_table);
 		dev_pm_opp_put_opp_table(priv->opp_table);
 		free_cpumask_var(priv->cpus);
 		list_del(&priv->node);
-- 
2.31.1

