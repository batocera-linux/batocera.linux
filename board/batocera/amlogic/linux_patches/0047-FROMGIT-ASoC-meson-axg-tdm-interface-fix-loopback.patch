From 283208b31ecb08829f554c470aaf550dbdf27192 Mon Sep 17 00:00:00 2001
From: Jerome Brunet <jbrunet@baylibre.com>
Date: Thu, 17 Dec 2020 19:03:07 +0000
Subject: [PATCH 047/118] FROMGIT: ASoC: meson: axg-tdm-interface: fix loopback

When the axg-tdm-interface was introduced, the backend DAI was marked as an
endpoint when DPCM was walking the DAPM graph to find a its BE.

It is no longer the case since this
commit 8dd26dff00c0 ("ASoC: dapm: Fix handling of custom_stop_condition on DAPM graph walks")
Because of this, when DPCM finds a BE it does everything it needs on the
DAIs but it won't power up the widgets between the FE and the BE if there
is no actual endpoint after the BE.

On meson-axg HWs, the loopback is a special DAI of the tdm-interface BE.
It is only linked to the dummy codec since there no actual HW after it.
>From the DAPM perspective, the DAI has no endpoint. Because of this, the TDM
decoder, which is a widget between the FE and BE is not powered up.

>From the user perspective, everything seems fine but no data is produced.

Connecting the Loopback DAI to a dummy DAPM endpoint solves the problem.

Fixes: 8dd26dff00c0 ("ASoC: dapm: Fix handling of custom_stop_condition on DAPM graph walks")
Cc: Charles Keepax <ckeepax@opensource.cirrus.com>
Signed-off-by: Jerome Brunet <jbrunet@baylibre.com>
---
 .../boot/dts/amlogic/meson-sm1-bpi-m5.dts     | 54 +++++++++++++++++++
 sound/soc/meson/axg-tdm-interface.c           | 14 ++++-
 2 files changed, 67 insertions(+), 1 deletion(-)
 create mode 100644 arch/arm64/boot/dts/amlogic/meson-sm1-bpi-m5.dts

diff --git a/arch/arm64/boot/dts/amlogic/meson-sm1-bpi-m5.dts b/arch/arm64/boot/dts/amlogic/meson-sm1-bpi-m5.dts
new file mode 100644
index 000000000000..b04464ee7535
--- /dev/null
+++ b/arch/arm64/boot/dts/amlogic/meson-sm1-bpi-m5.dts
@@ -0,0 +1,54 @@
+// SPDX-License-Identifier: (GPL-2.0+ OR MIT)
+/*
+ * Copyright (c) 2020 Dongjin Kim <tobetter@gmail.com>
+ * Copyright (c) 2020 
+ */
+
+/dts-v1/;
+
+#include "meson-sm1-odroid.dtsi"
+
+/ {
+	compatible = "sinovoip,bpi-m5", "amlogic,sm1";
+	model = "Bananapi BPI-M5";
+
+	hub_5v: regulator-hub_5v {
+		/* Connected to the Hub CHIPENABLE, LOW sets low power state */
+		gpio = <&gpio GPIOH_4 GPIO_ACTIVE_HIGH>;
+		enable-active-high;
+	};
+
+	leds {
+		compatible = "gpio-leds";
+
+		blue {
+			color = <LED_COLOR_ID_BLUE>;
+			function = LED_FUNCTION_STATUS;
+			gpios = <&gpio_ao GPIOAO_11 GPIO_ACTIVE_LOW>;
+			default-state = "off";
+		};
+
+		green {
+			color = <LED_COLOR_ID_GREEN>;
+			function = LED_FUNCTION_STATUS;
+			gpios = <&gpio_ao GPIOAO_2 GPIO_ACTIVE_LOW>;
+			linux,default-trigger = "heartbeat";
+			panic-indicator;
+		};
+	};
+};
+
+&gpio {
+        /*
+         * WARNING: The USB Hub on the BPI-M5 needs a reset signal
+         * to be turned high in order to be detected by the USB Controller
+         * This signal should be handled by a USB specific power sequence
+         * in order to reset the Hub when USB bus is powered down.
+         */
+        usb-hub {
+                gpio-hog;
+                gpios = <GPIOH_4 GPIO_ACTIVE_HIGH>;
+                output-high;
+                line-name = "usb-hub-reset";
+        };
+};
-- 
2.31.1

