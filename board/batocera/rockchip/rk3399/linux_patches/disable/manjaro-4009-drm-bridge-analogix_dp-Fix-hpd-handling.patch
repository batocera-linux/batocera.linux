From 8c0ae5225dcbd632879b4cb21599297c943d93bf Mon Sep 17 00:00:00 2001
From: baiywt <baiywt_gj@163.com>
Date: Sun, 24 Apr 2022 16:59:30 +0800
Subject: [PATCH 6009/6021] drm/bridge: analogix_dp: Fix hpd handling

---
 .../drm/bridge/analogix/analogix_dp_core.c    | 39 ++++++++++++-------
 1 file changed, 26 insertions(+), 13 deletions(-)

diff --git a/drivers/gpu/drm/bridge/analogix/analogix_dp_core.c b/drivers/gpu/drm/bridge/analogix/analogix_dp_core.c
index f86efdd33..4e6519d6f 100644
--- a/drivers/gpu/drm/bridge/analogix/analogix_dp_core.c
+++ b/drivers/gpu/drm/bridge/analogix/analogix_dp_core.c
@@ -888,6 +888,16 @@ static int analogix_dp_enable_scramble(struct analogix_dp_device *dp,
 	return ret < 0 ? ret : 0;
 }
 
+static irqreturn_t analogix_dp_hpd_irq_handler(int irq, void *arg)
+{
+        struct analogix_dp_device *dp = arg;
+
+        if (dp->drm_dev)
+                drm_helper_hpd_irq_event(dp->drm_dev);
+
+        return IRQ_HANDLED;
+}
+
 static irqreturn_t analogix_dp_hardirq(int irq, void *arg)
 {
 	struct analogix_dp_device *dp = arg;
@@ -1767,19 +1777,21 @@ analogix_dp_probe(struct device *dev, struct analogix_dp_plat_data *plat_data)
 	}
 
 	if (dp->hpd_gpiod) {
-		/*
-		 * Set up the hotplug GPIO from the device tree as an interrupt.
-		 * Simply specifying a different interrupt in the device tree
-		 * doesn't work since we handle hotplug rather differently when
-		 * using a GPIO.  We also need the actual GPIO specifier so
-		 * that we can get the current state of the GPIO.
-		 */
-		dp->irq = gpiod_to_irq(dp->hpd_gpiod);
-		irq_flags = IRQF_TRIGGER_RISING | IRQF_TRIGGER_FALLING;
-	} else {
-		dp->irq = platform_get_irq(pdev, 0);
-		irq_flags = 0;
-	}
+                ret = devm_request_threaded_irq(dev,
+                                                gpiod_to_irq(dp->hpd_gpiod),
+                                                NULL,
+                                                analogix_dp_hpd_irq_handler,
+                                                IRQF_TRIGGER_RISING |
+                                                IRQF_TRIGGER_FALLING |
+                                                IRQF_ONESHOT,
+                                                "analogix-hpd", dp);
+                if (ret) {
+                        dev_err(dev, "failed to request hpd IRQ: %d\n", ret);
+                        return ERR_PTR(ret);
+                }
+	}
+
+	dp->irq = platform_get_irq(pdev, 0);
 
 	if (dp->irq == -ENXIO) {
 		dev_err(&pdev->dev, "failed to get irq\n");
@@ -1787,6 +1799,7 @@ analogix_dp_probe(struct device *dev, struct analogix_dp_plat_data *plat_data)
 		goto err_disable_clk;
 	}
 
+	irq_set_status_flags(dp->irq, IRQ_NOAUTOEN);
 	ret = devm_request_threaded_irq(&pdev->dev, dp->irq,
 					analogix_dp_hardirq,
 					analogix_dp_irq_thread,
-- 
2.30.2

