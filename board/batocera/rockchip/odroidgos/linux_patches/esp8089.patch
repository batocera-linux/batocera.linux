diff --git a/drivers/net/wireless/esp8089/Makefile b/drivers/net/wireless/esp8089/Makefile
index f90fa50..8a22adb 100755
--- a/drivers/net/wireless/esp8089/Makefile
+++ b/drivers/net/wireless/esp8089/Makefile
@@ -1,52 +1,5 @@
 MODNAME = esp8089
 
-# By default, we try to compile the modules for the currently running
-# kernel.  But it's the first approximation, as we will re-read the
-# version from the kernel sources.
-KVERS_UNAME ?= $(shell uname -r)
-KVERS_ARCH ?= $(shell arch)
-
-# KBUILD is the path to the Linux kernel build tree.  It is usually the
-# same as the kernel source tree, except when the kernel was compiled in
-# a separate directory.
-KBUILD ?= $(PWD)
-
-ifeq (,$(KBUILD))
-$(error Kernel build tree not found - please set KBUILD to configured kernel)
-endif
-
-KCONFIG := $(KBUILD)/.config
-ifeq (,$(wildcard $(KCONFIG)))
-$(error No .config found in $(KBUILD), please set KBUILD to configured kernel)
-endif
-
-ifneq (,$(wildcard $(KBUILD)/include/linux/version.h))
-ifneq (,$(wildcard $(KBUILD)/include/generated/uapi/linux/version.h))
-$(error Multiple copies of version.h found, please clean your build tree)
-endif
-endif
-
-# Kernel Makefile doesn't always know the exact kernel version, so we
-# get it from the kernel headers instead and pass it to make.
-VERSION_H := $(KBUILD)/include/generated/utsrelease.h
-ifeq (,$(wildcard $(VERSION_H)))
-VERSION_H := $(KBUILD)/include/linux/utsrelease.h
-endif
-ifeq (,$(wildcard $(VERSION_H)))
-VERSION_H := $(KBUILD)/include/linux/version.h
-endif
-ifeq (,$(wildcard $(VERSION_H)))
-$(error Please run 'make modules_prepare' in $(KBUILD))
-endif
-
-KVERS := $(shell sed -ne 's/"//g;s/^\#define UTS_RELEASE //p' $(VERSION_H))
-
-ifeq (,$(KVERS))
-$(error Cannot find UTS_RELEASE in $(VERSION_H), please report)
-endif
-
-INST_DIR = /lib/modules/$(KVERS)/misc
-
 SRC_DIR=$(shell pwd)
 
 include $(KCONFIG)
@@ -98,18 +51,6 @@ config_check:
 # Taken from here:
 # http://www.xkyle.com/building-linux-packages-for-kernel-drivers/
 
-dkms:
-	$(MAKE) config_check
-	echo $(DKMS_PATH)
-	echo "$(KVERS_UNAME)"
-	mkdir -p $(DKMS_PATH)
-	cp -r . $(DKMS_PATH)
-	-rm -rf $(DKMS_PATH)/.git
-	-rm $(DKMS_PATH)/.gitignore
-	-rm $(DKMS_PATH)/*deb
-	dkms add -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION)
-	dkms build -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION)
-
 dkmsdeb: dkms
 	dkms mkdsc -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION) --source-only
 	dkms mkdeb -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION) --source-only 
@@ -130,19 +71,4 @@ clean:
 	rm -f *.o *.ko .*.cmd *.mod.c *.symvers modules.order
 	rm -rf .tmp_versions
 
-install: config_check $(MODULE)
-	@/sbin/modinfo $(MODULE) | grep -q "^vermagic: *$(KVERS) " || \
-		{ echo "$(MODULE)" is not for Linux $(KVERS); exit 1; }
-	mkdir -p -m 755 $(DESTDIR)$(INST_DIR)
-	install -m 0644 $(MODULE) $(DESTDIR)$(INST_DIR)
-ifndef DESTDIR
-	-/sbin/depmod -a $(KVERS)
-endif
-
-uninstall:
-	rm -f $(DESTDIR)$(INST_DIR)/$(MODULE)
-ifndef DESTDIR
-	-/sbin/depmod -a $(KVERS)
-endif
-
 .PHONY: all modules clean install config_check
