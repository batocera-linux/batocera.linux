diff --git a/drivers/net/wireless/esp8089/Makefile b/drivers/net/wireless/esp8089/Makefile
index f90fa50..8a22adb 100755
--- a/drivers/net/wireless/esp8089/Makefile
+++ b/drivers/net/wireless/esp8089/Makefile
@@ -1,52 +1,5 @@
 MODNAME = esp8089
 
-# By default, we try to compile the modules for the currently running
-# kernel.  But it's the first approximation, as we will re-read the
-# version from the kernel sources.
-KVERS_UNAME ?= $(shell uname -r)
-KVERS_ARCH ?= $(shell arch)
-
-# KBUILD is the path to the Linux kernel build tree.  It is usually the
-# same as the kernel source tree, except when the kernel was compiled in
-# a separate directory.
-KBUILD ?= $(PWD)
-
-ifeq (,$(KBUILD))
-$(error Kernel build tree not found - please set KBUILD to configured kernel)
-endif
-
-KCONFIG := $(KBUILD)/.config
-ifeq (,$(wildcard $(KCONFIG)))
-$(error No .config found in $(KBUILD), please set KBUILD to configured kernel)
-endif
-
-ifneq (,$(wildcard $(KBUILD)/include/linux/version.h))
-ifneq (,$(wildcard $(KBUILD)/include/generated/uapi/linux/version.h))
-$(error Multiple copies of version.h found, please clean your build tree)
-endif
-endif
-
-# Kernel Makefile doesn't always know the exact kernel version, so we
-# get it from the kernel headers instead and pass it to make.
-VERSION_H := $(KBUILD)/include/generated/utsrelease.h
-ifeq (,$(wildcard $(VERSION_H)))
-VERSION_H := $(KBUILD)/include/linux/utsrelease.h
-endif
-ifeq (,$(wildcard $(VERSION_H)))
-VERSION_H := $(KBUILD)/include/linux/version.h
-endif
-ifeq (,$(wildcard $(VERSION_H)))
-$(error Please run 'make modules_prepare' in $(KBUILD))
-endif
-
-KVERS := $(shell sed -ne 's/"//g;s/^\#define UTS_RELEASE //p' $(VERSION_H))
-
-ifeq (,$(KVERS))
-$(error Cannot find UTS_RELEASE in $(VERSION_H), please report)
-endif
-
-INST_DIR = /lib/modules/$(KVERS)/misc
-
 SRC_DIR=$(shell pwd)
 
 include $(KCONFIG)
@@ -98,18 +51,6 @@ config_check:
 # Taken from here:
 # http://www.xkyle.com/building-linux-packages-for-kernel-drivers/
 
-dkms:
-	$(MAKE) config_check
-	echo $(DKMS_PATH)
-	echo "$(KVERS_UNAME)"
-	mkdir -p $(DKMS_PATH)
-	cp -r . $(DKMS_PATH)
-	-rm -rf $(DKMS_PATH)/.git
-	-rm $(DKMS_PATH)/.gitignore
-	-rm $(DKMS_PATH)/*deb
-	dkms add -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION)
-	dkms build -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION)
-
 dkmsdeb: dkms
 	dkms mkdsc -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION) --source-only
 	dkms mkdeb -m $(PACKAGE_NAME) -v $(PACKAGE_VERSION) --source-only 
@@ -130,19 +71,4 @@ clean:
 	rm -f *.o *.ko .*.cmd *.mod.c *.symvers modules.order
 	rm -rf .tmp_versions
 
-install: config_check $(MODULE)
-	@/sbin/modinfo $(MODULE) | grep -q "^vermagic: *$(KVERS) " || \
-		{ echo "$(MODULE)" is not for Linux $(KVERS); exit 1; }
-	mkdir -p -m 755 $(DESTDIR)$(INST_DIR)
-	install -m 0644 $(MODULE) $(DESTDIR)$(INST_DIR)
-ifndef DESTDIR
-	-/sbin/depmod -a $(KVERS)
-endif
-
-uninstall:
-	rm -f $(DESTDIR)$(INST_DIR)/$(MODULE)
-ifndef DESTDIR
-	-/sbin/depmod -a $(KVERS)
-endif
-
 .PHONY: all modules clean install config_check
diff --git a/drivers/net/wireless/ew-7611ulb/core/rtw_mp.c b/drivers/net/wireless/ew-7611ulb/core/rtw_mp.c
index a16da9b..39384d5 100644
--- a/drivers/net/wireless/ew-7611ulb/core/rtw_mp.c
+++ b/drivers/net/wireless/ew-7611ulb/core/rtw_mp.c
@@ -2093,14 +2093,17 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 
 	data[0] = '\0';
 
-	i = psd_start;
-	while (i < psd_stop) {
-		if (i >= psd_pts)
-			psd_data = rtw_GetPSDData(pAdapter, i - psd_pts);
-		else
-			psd_data = rtw_GetPSDData(pAdapter, i);
-		sprintf(data, "%s%x ", data, psd_data);
-		i++;
+	{
+		size_t extra_len = strlen(data);
+		i = psd_start;
+		while (i < psd_stop) {
+			if (i >= psd_pts)
+				psd_data = rtw_GetPSDData(pAdapter, i - psd_pts);
+			else
+				psd_data = rtw_GetPSDData(pAdapter, i);
+			extra_len += sprintf(data + extra_len, "%x ", psd_data);
+			i++;
+		}
 	}
 
 #ifdef CONFIG_LONG_DELAY_ISSUE
diff --git a/drivers/net/wireless/ew-7611ulb/os_dep/linux/ioctl_mp.c b/drivers/net/wireless/ew-7611ulb/os_dep/linux/ioctl_mp.c
index ad2bb02..179d08d 100644
--- a/drivers/net/wireless/ew-7611ulb/os_dep/linux/ioctl_mp.c
+++ b/drivers/net/wireless/ew-7611ulb/os_dep/linux/ioctl_mp.c
@@ -1719,7 +1719,7 @@ int rtw_mp_tx(struct net_device *dev,
 			char *pextra = extra;
 			RTW_INFO("Got format [ch=%d,bw=%d,rate=%d,pwr=%d,ant=%d,tx=%d]\n", channel, bandwidth, rate, txpower, ant, txmode);
 			_rtw_memset(extra, 0, wrqu->data.length);
-			sprintf(extra, "Change Current channel %d to channel %d", padapter->mppriv.channel , channel);
+			pextra += sprintf(pextra, "Change Current channel %d to channel %d", padapter->mppriv.channel , channel);
 			padapter->mppriv.channel = channel;
 			SetChannel(padapter);
 			pHalData->current_channel = channel;
@@ -2074,6 +2074,7 @@ int rtw_efuse_mask_file(struct net_device *dev,
 		u8	count = 0;
 		u8	i = 0;
 		u32	datalen = 0;
+		size_t extra_len;
 
 		ptmp = extra;
 		pch = strsep(&ptmp, ",");
@@ -2099,12 +2100,13 @@ int rtw_efuse_mask_file(struct net_device *dev,
 
 		 } while (count < 64);
 
+		extra_len = strlen(extra);
 		for (i = 0; i < count; i++)
-			sprintf(extra, "%s:%02x", extra, maskfileBuffer[i]);
+			extra_len += sprintf(extra + extra_len, ":%02x", maskfileBuffer[i]);
 
 		padapter->registrypriv.bFileMaskEfuse = _TRUE;
 
-		sprintf(extra, "%s\nLoad Efuse Mask data %d hex ok\n", extra, count);
+		extra_len += sprintf(extra + extra_len, "\nLoad Efuse Mask data %d hex ok\n", count);
 		wrqu->data.length = strlen(extra);
 		return 0;
 	}
@@ -2522,16 +2524,18 @@ todo:
 	mptbt_BtControlProcess(padapter, &BtReq);
 
 	if (readtherm == 0) {
+		size_t extra_len;
 		sprintf(extra, "BT thermal=");
 		for (i = 4; i < pMptCtx->mptOutLen; i++) {
 			if ((pMptCtx->mptOutBuf[i] == 0x00) && (pMptCtx->mptOutBuf[i + 1] == 0x00))
 				goto exit;
 
-			sprintf(extra, "%s %d ", extra, (pMptCtx->mptOutBuf[i] & 0x1f));
+			extra_len += sprintf(extra + extra_len, " %d ", (pMptCtx->mptOutBuf[i] & 0x1f));
 		}
 	} else {
+		size_t extra_len;
 		for (i = 4; i < pMptCtx->mptOutLen; i++)
-			sprintf(extra, "%s 0x%x ", extra, pMptCtx->mptOutBuf[i]);
+			extra_len += sprintf(extra + extra_len, " 0x%x ", pMptCtx->mptOutBuf[i]);
 	}
 
 exit:
diff --git a/drivers/net/wireless/rtl8192cu/core/rtw_mp.c b/drivers/net/wireless/rtl8192cu/core/rtw_mp.c
index 9af42cd..73be688 100755
--- a/drivers/net/wireless/rtl8192cu/core/rtw_mp.c
+++ b/drivers/net/wireless/rtl8192cu/core/rtw_mp.c
@@ -1276,7 +1276,7 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 {
 	u32 i, psd_pts=0, psd_start=0, psd_stop=0;
 	u32 psd_data=0;
-	
+	size_t data_len = 0;	
 #ifdef PLATFORM_LINUX
 	if (!netif_running(pAdapter->pnetdev)) {
 		RT_TRACE(_module_mp_, _drv_warning_, ("mp_query_psd: Fail! interface not opened!\n"));
@@ -1307,7 +1307,7 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 		} else {
 			psd_data = GetPSDData(pAdapter, i);
 		}
-		sprintf(data, "%s%x ", data, psd_data);
+		data_len += sprintf(data + data_len, "%x ", psd_data);
 		i++;
 	}
 
diff --git a/drivers/net/wireless/rtl8192cu/os_dep/linux/ioctl_linux.c b/drivers/net/wireless/rtl8192cu/os_dep/linux/ioctl_linux.c
index 9adbeaf..3e067fe 100755
--- a/drivers/net/wireless/rtl8192cu/os_dep/linux/ioctl_linux.c
+++ b/drivers/net/wireless/rtl8192cu/os_dep/linux/ioctl_linux.c
@@ -8668,6 +8668,7 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 	u16 mapLen=0;
 	char *pch, *ptmp, *token, *tmp[3]={0x00,0x00,0x00};
 	u16 addr = 0, cnts = 0, max_available_size = 0,raw_cursize = 0 ,raw_maxsize = 0;
+	size_t extra_len;
 	
 	_rtw_memset(data, '\0', sizeof(data));
 	_rtw_memset(rawdata, '\0', sizeof(rawdata));
@@ -8701,27 +8702,27 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		} 
 		_rtw_memset(extra, '\0', sizeof(extra));
 		DBG_871X("\tOFFSET\tVALUE(hex)\n");
-		sprintf(extra, "%s \n", extra);
+		extra_len = sprintf(extra, " \n");
 		for ( i = 0; i < EFUSE_MAP_SIZE; i += 16 )
 		{
 			DBG_871X("\t0x%02x\t", i);
-			sprintf(extra, "%s \t0x%02x\t", extra,i);
+			extra_len += sprintf(extra + extra_len, " \t0x%02x\t",i);
 			for (j = 0; j < 8; j++)
 			{	  
 				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s %02X", extra, data[i+j]);
+				extra_len += sprintf(extra + extra_len, " %02X", data[i+j]);
 			}
 			DBG_871X("\t");
-			sprintf(extra,"%s\t",extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j < 16; j++){
 				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s %02X", extra, data[i+j]);
+				extra_len += sprintf(extra + extra_len, " %02X", data[i+j]);
 			}
 			DBG_871X("\n");
-			sprintf(extra,"%s\n",extra);	
+			extra_len += sprintf(extra + extra_len, "\n");	
 		}
 		DBG_871X("\n");
-		wrqu->length = strlen(extra);
+		wrqu->length = extra_len;
 	
 		return 0;
 	}
@@ -8753,14 +8754,15 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		}	
 
 		_rtw_memset(extra, '\0', sizeof(extra));	 
+		extra_len = 0;
 		for ( i = 0; i < cnts; i ++) {
 			DBG_871X("0x%02x", data[i]);
-			sprintf(extra, "%s 0x%02X", extra, data[i]);
+			extra_len += sprintf(extra + extra_len, " 0x%02X", data[i]);
 			DBG_871X(" ");
-			sprintf(extra,"%s ",extra);
+			extra_len += sprintf(extra + extra_len, " ");
 		}
 
-		wrqu->length = strlen(extra)+1;
+		wrqu->length = extra_len;
 
 		DBG_871X("extra = %s ", extra);
 
@@ -8780,20 +8782,21 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		}
 				
 		_rtw_memset(extra, '\0', sizeof(extra));
+		extra_len = 0;
 		for ( i=0; i<mapLen; i++ ) {
 			DBG_871X(" %02x", rawdata[i]);
-			sprintf(extra, "%s %02x", extra, rawdata[i] );
+			extra_len += sprintf(extra + extra_len, " %02x", rawdata[i] );
 
 			if ((i & 0xF) == 0xF){ 
 				DBG_871X("\n\t");
-				sprintf(extra, "%s\n\t", extra);
+				extra_len += sprintf(extra + extra_len, "\n\t");
 			}
 			else if ((i & 0x7) == 0x7){ 
 				DBG_871X("\t");
-				sprintf(extra, "%s\t", extra);
+				extra_len += sprintf(extra + extra_len, "\t");
 			}
 		}
-		wrqu->length = strlen(extra);
+		wrqu->length = extra_len;
 		return 0;
 	}
 	else if ( strcmp(tmp[0],"mac") == 0 ) {
@@ -8819,13 +8822,14 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 			DBG_871X("rtw_efuse_access ok \n");
 		}	
 		_rtw_memset(extra, '\0', sizeof(extra));		 
+		extra_len = 0;
 		for ( i = 0; i < cnts; i ++) {
 			DBG_871X("0x%02x", data[i]);
-			sprintf(extra, "%s 0x%02X", extra, data[i+j]);
+			extra_len += sprintf(extra + extra_len, " 0x%02X", data[i+j]);
 			DBG_871X(" ");
-			sprintf(extra,"%s ",extra);
+			extra_len += sprintf(extra + extra_len, " ");
 		}
-		wrqu->length = strlen(extra);
+		wrqu->length = extra_len;
 		return 0;
 	}
 	else if ( strcmp(tmp[0],"vidpid") == 0 ) {
@@ -8850,26 +8854,29 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 			DBG_871X("rtw_efuse_access ok \n");
 		}	
 		_rtw_memset(extra, '\0', sizeof(extra));		 
+		extra_len = 0;
 		for ( i = 0; i < cnts; i ++) {
 			DBG_871X("0x%02x", data[i]);
-			sprintf(extra, "%s 0x%02X", extra, data[i+j]);
+			extra_len += sprintf(extra + extra_len, " 0x%02X", data[i+j]);
 			DBG_871X(" ");
-			sprintf(extra,"%s ",extra);
+			extra_len += sprintf(extra + extra_len, " ");
 		}
-		wrqu->length = strlen(extra);
+		wrqu->length = extra_len;
 		return 0;
 	}
 	else if ( strcmp(tmp[0],"ableraw") == 0 ) {
 		efuse_GetCurrentSize(padapter,&raw_cursize);
 		raw_maxsize = efuse_GetMaxSize(padapter);
-		sprintf(extra, "%s : [ available raw size] = %d",extra,raw_maxsize-raw_cursize);
-		wrqu->length = strlen(extra);
+		extra_len = strlen(extra);
+		extra_len += sprintf(extra + extra_len, " : [ available raw size] = %d",raw_maxsize-raw_cursize);
+		wrqu->length = extra_len;
 
 		return 0;
 	}else
 	{
-		 sprintf(extra, "%s : Command not found\n",extra);
-		  wrqu->length = strlen(extra);
+		extra_len = strlen(extra);
+		 extra_len += sprintf(extra + extra_len, " : Command not found\n");
+		  wrqu->length = extra_len;
 		  return 0;
 	}
 	
@@ -9140,6 +9147,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 	//u32 *data = (u32*)extra;
 	u32 ret, i=0, j=0, strtout=0;
 	PADAPTER padapter = rtw_netdev_priv(dev);
+	size_t extra_len;
 
 	if (wrqu->length > 128) return -EFAULT;
 
@@ -9190,6 +9198,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 				pch = tmp;		
 				DBG_871X("pch=%s",pch);
 				
+				extra_len = strlen(extra);
 				while( *pch != '\0' )
 				{
 					pnext = strpbrk(pch, " ");
@@ -9197,7 +9206,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 					if ( *pnext != '\0' )
 					{
 						  strtout = simple_strtoul (pnext , &ptmp, 16);
-						  sprintf( extra, "%s %d" ,extra ,strtout );
+						  extra_len += sprintf( extra + extra_len, " %d", strtout );
 					}
 					else{
 						  break;
@@ -9224,6 +9233,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 				pch = tmp;		
 				DBG_871X("pch=%s",pch);
 				
+				extra_len = strlen(extra);
 				while( *pch != '\0' )
 				{
 					pnext = strpbrk(pch, " ");
@@ -9231,7 +9241,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 					if ( *pnext != '\0' )
 					{
 						  strtout = simple_strtoul (pnext , &ptmp, 16);
-						  sprintf( extra, "%s %d" ,extra ,strtout );
+						  extra_len += sprintf( extra + extra_len, " %d", strtout );
 					}
 					else{
 			break;
@@ -9304,6 +9314,7 @@ static int rtw_mp_read_rf(struct net_device *dev,
 	u32 path, addr;
 	u32 ret,i=0 ,j=0,strtou=0;
 	PADAPTER padapter = rtw_netdev_priv(dev);
+	size_t extra_len = 0;
 
 
 	if (wrqu->length > 128) return -EFAULT;
@@ -9341,14 +9352,14 @@ static int rtw_mp_read_rf(struct net_device *dev,
 					if ( *pnext != '\0' )
 					{
 						  strtou = simple_strtoul (pnext , &ptmp, 16);
-						  sprintf( extra, "%s %d" ,extra ,strtou );
+						  extra_len += sprintf( extra + extra_len, " %d", strtou );
 					}
 					else{
 						  break;
 					}
 					pch = pnext;
 				}
-			wrqu->length = strlen(extra);
+			wrqu->length = extra_len;
 
 	return 0;
 }
diff --git a/drivers/net/wireless/rtl8812au/core/rtw_mp.c b/drivers/net/wireless/rtl8812au/core/rtw_mp.c
index c2e400d..9884bb7 100644
--- a/drivers/net/wireless/rtl8812au/core/rtw_mp.c
+++ b/drivers/net/wireless/rtl8812au/core/rtw_mp.c
@@ -1840,7 +1840,7 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 {
 	u32 i, psd_pts=0, psd_start=0, psd_stop=0;
 	u32 psd_data=0;
-
+	size_t data_len = 0;
 
 #ifdef PLATFORM_LINUX
 	if (!netif_running(pAdapter->pnetdev)) {
@@ -1871,7 +1871,7 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 		} else {
 			psd_data = rtw_GetPSDData(pAdapter, i);
 		}
-		sprintf(data, "%s%x ", data, psd_data);
+		data_len += sprintf(data + data_len, "%x ", psd_data);
 		i++;
 	}
 
diff --git a/drivers/net/wireless/rtl8812au/os_dep/linux/ioctl_linux.c b/drivers/net/wireless/rtl8812au/os_dep/linux/ioctl_linux.c
index 4eba681..62f472e 100644
--- a/drivers/net/wireless/rtl8812au/os_dep/linux/ioctl_linux.c
+++ b/drivers/net/wireless/rtl8812au/os_dep/linux/ioctl_linux.c
@@ -9013,6 +9013,7 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 #ifdef CONFIG_IOL
 	u8 org_fw_iol = padapter->registrypriv.fw_iol;// 0:Disable, 1:enable, 2:by usb speed
 #endif
+	size_t extra_len;
 
 	wrqu = (struct iw_point*)wdata;
 	pwrctrlpriv = adapter_to_pwrctl(padapter);
@@ -9065,22 +9066,22 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 	} else if (strcmp(tmp[0], "drvmap") == 0) {
 		mapLen = EFUSE_MAP_SIZE;
 
-		sprintf(extra, "\n");
+		extra_len = sprintf(extra, "\n");
 		for (i = 0; i < EFUSE_MAP_SIZE; i += 16) {
 //			DBG_871X("0x%02x\t", i);
-			sprintf(extra, "%s0x%02x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%02x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s%02X ", extra, PROMContent[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", PROMContent[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra, "%s\t", extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s%02X ", extra, PROMContent[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", PROMContent[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra,"%s\n",extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 	} else if (strcmp(tmp[0], "realmap") == 0) {
@@ -9092,22 +9093,22 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		}
 
 //		DBG_871X("OFFSET\tVALUE(hex)\n");
-		sprintf(extra, "\n");
+		extra_len = sprintf(extra, "\n");
 		for (i = 0; i < EFUSE_MAP_SIZE; i += 16) {
 //			DBG_871X("0x%02x\t", i);
-			sprintf(extra, "%s0x%02x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%02x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeEfuseInitMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeEfuseInitMap[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra, "%s\t", extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeEfuseInitMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeEfuseInitMap[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra,"%s\n",extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 	} else if (strcmp(tmp[0], "rmap") == 0) {
@@ -9144,9 +9145,10 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 
 //		DBG_871X("%s: data={", __FUNCTION__);
 		*extra = 0;
+		extra_len = 0;
 		for (i=0; i<cnts; i++) {
 //			DBG_871X("0x%02x ", data[i]);
-			sprintf(extra, "%s0x%02X ", extra, data[i]);
+			extra_len += sprintf(extra + extra_len, "0x%02X ", data[i]);
 		}
 //		DBG_871X("}\n");
 	} else if (strcmp(tmp[0], "realraw") == 0) {
@@ -9159,20 +9161,20 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		}
 		_rtw_memset(extra,'\0',strlen(extra));
 		//		DBG_871X("%s: realraw={\n", __FUNCTION__);
-		sprintf(extra, "\n0x00\t");
+		extra_len = sprintf(extra, "\n0x00\t");
 		for (i=0; i< mapLen; i++) {
 			//			DBG_871X("%02X", rawdata[i]);
-			sprintf(extra, "%s%02X", extra, rawdata[i]);
+			extra_len += sprintf(extra + extra_len, "%02X", rawdata[i]);
 			if ((i & 0xF) == 0xF) {
 				//				DBG_871X("\n");
-				sprintf(extra, "%s\n", extra);
-				sprintf(extra, "%s0x%02x\t", extra, i+1);
+				extra_len += sprintf(extra + extra_len, "\n");
+				extra_len += sprintf(extra + extra_len, "0x%02x\t", i+1);
 			} else if ((i & 0x7) == 0x7) {
 				//				DBG_871X("\t");
-				sprintf(extra, "%s \t", extra);
+				extra_len += sprintf(extra + extra_len, " \t");
 			} else {
 				//				DBG_871X(" ");
-				sprintf(extra, "%s ", extra);
+				extra_len += sprintf(extra + extra_len, " ");
 			}
 		}
 		//		DBG_871X("}\n");
@@ -9255,12 +9257,13 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 
 //		DBG_871X("%s: MAC address={", __FUNCTION__);
 		*extra = 0;
+		extra_len = 0;
 		for (i=0; i<cnts; i++) {
 //			DBG_871X("%02X", data[i]);
-			sprintf(extra, "%s%02X", extra, data[i]);
+			extra_len += sprintf(extra + extra_len, "%02X", data[i]);
 			if (i != (cnts-1)) {
 //				DBG_871X(":");
-				sprintf(extra,"%s:",extra);
+				extra_len += sprintf(extra + extra_len, ":");
 			}
 		}
 //		DBG_871X("}\n");
@@ -9316,12 +9319,13 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 
 //		DBG_871X("%s: {VID,PID}={", __FUNCTION__);
 		*extra = 0;
+		extra_len = 0;
 		for (i=0; i<cnts; i++) {
 //			DBG_871X("0x%02x", data[i]);
-			sprintf(extra, "%s0x%02X", extra, data[i]);
+			extra_len += sprintf(extra + extra_len, "0x%02X", data[i]);
 			if (i != (cnts-1)) {
 //				DBG_871X(",");
-				sprintf(extra,"%s,",extra);
+				extra_len += sprintf(extra + extra_len, ",");
 			}
 		}
 //		DBG_871X("}\n");
@@ -9341,21 +9345,22 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 
 //		DBG_871X("OFFSET\tVALUE(hex)\n");
 		sprintf(extra, "\n");
+		extra_len = 0;
 		for (i=0; i<512; i+=16) { // set 512 because the iwpriv's extra size have limit 0x7FF
 //			DBG_871X("0x%03x\t", i);
-			sprintf(extra, "%s0x%03x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%03x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", pEfuseHal->BTEfuseInitMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->BTEfuseInitMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->BTEfuseInitMap[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra,"%s\t",extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", pEfuseHal->BTEfuseInitMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->BTEfuseInitMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->BTEfuseInitMap[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra, "%s\n", extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 	} else if (strcmp(tmp[0],"btbmap") == 0) {
@@ -9369,22 +9374,22 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		}
 
 //		DBG_871X("OFFSET\tVALUE(hex)\n");
-		sprintf(extra, "\n");
+		extra_len = sprintf(extra, "\n");
 		for (i=512; i<1024 ; i+=16) {
 //			DBG_871X("0x%03x\t", i);
-			sprintf(extra, "%s0x%03x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%03x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->BTEfuseInitMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->BTEfuseInitMap[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra,"%s\t",extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", data[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->BTEfuseInitMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->BTEfuseInitMap[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra, "%s\n", extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 	} else if (strcmp(tmp[0],"btrmap") == 0) {
@@ -9421,71 +9426,72 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 		}
 
 		*extra = 0;
+		extra_len = 0;
 //		DBG_871X("%s: bt efuse data={", __FUNCTION__);
 		for (i=0; i<cnts; i++) {
 //			DBG_871X("0x%02x ", data[i]);
-			sprintf(extra, "%s 0x%02X ", extra, data[i]);
+			extra_len += sprintf(extra + extra_len, " 0x%02X ", data[i]);
 		}
 //		DBG_871X("}\n");
 		DBG_871X(FUNC_ADPT_FMT ": BT MAC=[%s]\n", FUNC_ADPT_ARG(padapter), extra);
 	} else if (strcmp(tmp[0], "btffake") == 0) {
 //		DBG_871X("OFFSET\tVALUE(hex)\n");
-		sprintf(extra, "\n");
+		extra_len = sprintf(extra, "\n");
 		for (i=0; i<512; i+=16) {
 //			DBG_871X("0x%03x\t", i);
-			sprintf(extra, "%s0x%03x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%03x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra, "%s\t", extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra, "%s\n", extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 	} else if (strcmp(tmp[0],"btbfake") == 0) {
 //		DBG_871X("OFFSET\tVALUE(hex)\n");
-		sprintf(extra, "\n");
+		extra_len = sprintf(extra, "\n");
 		for (i=512; i<1024; i+=16) {
 //			DBG_871X("0x%03x\t", i);
-			sprintf(extra, "%s0x%03x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%03x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra, "%s\t", extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeBTEfuseModifiedMap[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra, "%s\n", extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 	} else if (strcmp(tmp[0],"wlrfkmap")== 0) {
 //		DBG_871X("OFFSET\tVALUE(hex)\n");
-		sprintf(extra, "\n");
+		extra_len = sprintf(extra, "\n");
 		for (i=0; i<EFUSE_MAP_SIZE; i+=16) {
 //			DBG_871X("\t0x%02x\t", i);
-			sprintf(extra, "%s0x%02x\t", extra, i);
+			extra_len += sprintf(extra + extra_len, "0x%02x\t", i);
 			for (j=0; j<8; j++) {
 //				DBG_871X("%02X ", pEfuseHal->fakeEfuseModifiedMap[i+j]);
-				sprintf(extra, "%s%02X ", extra, pEfuseHal->fakeEfuseModifiedMap[i+j]);
+				extra_len += sprintf(extra + extra_len, "%02X ", pEfuseHal->fakeEfuseModifiedMap[i+j]);
 			}
 //			DBG_871X("\t");
-			sprintf(extra, "%s\t", extra);
+			extra_len += sprintf(extra + extra_len, "\t");
 			for (; j<16; j++) {
 //				DBG_871X("%02X ", pEfuseHal->fakeEfuseModifiedMap[i+j]);
-				sprintf(extra, "%s %02X", extra, pEfuseHal->fakeEfuseModifiedMap[i+j]);
+				extra_len += sprintf(extra + extra_len, " %02X", pEfuseHal->fakeEfuseModifiedMap[i+j]);
 			}
 //			DBG_871X("\n");
-			sprintf(extra, "%s\n", extra);
+			extra_len += sprintf(extra + extra_len, "\n");
 		}
 //		DBG_871X("\n");
 
@@ -9509,9 +9515,10 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 
 		//		DBG_871X("%s: data={", __FUNCTION__);
 		*extra = 0;
+		extra_len = 0;
 		for (i=0; i<cnts; i++) {
 			DBG_871X("wlrfkrmap = 0x%02x \n", pEfuseHal->fakeEfuseModifiedMap[addr+i]);
-			sprintf(extra, "%s0x%02X ", extra, pEfuseHal->fakeEfuseModifiedMap[addr+i]);
+			extra_len += sprintf(extra + extra_len, "0x%02X ", pEfuseHal->fakeEfuseModifiedMap[addr+i]);
 		}
 	} else if (strcmp(tmp[0],"btrfkrmap")== 0) {
 		if ((tmp[1]==NULL) || (tmp[2]==NULL)) {
@@ -9533,9 +9540,10 @@ static int rtw_mp_efuse_get(struct net_device *dev,
 
 		//		DBG_871X("%s: data={", __FUNCTION__);
 		*extra = 0;
+		extra_len = 0;
 		for (i=0; i<cnts; i++) {
 			DBG_871X("wlrfkrmap = 0x%02x \n", pEfuseHal->fakeBTEfuseModifiedMap[addr+i]);
-			sprintf(extra, "%s0x%02X ", extra, pEfuseHal->fakeBTEfuseModifiedMap[addr+i]);
+			extra_len += sprintf(extra + extra_len, "0x%02X ", pEfuseHal->fakeBTEfuseModifiedMap[addr+i]);
 		}
 	} else {
 		sprintf(extra, "Command not found!");
@@ -10320,6 +10328,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 	//u32 *data = (u32*)extra;
 	u32 ret, i=0, j=0, strtout=0;
 	PADAPTER padapter = rtw_netdev_priv(dev);
+	size_t extra_len;
 
 
 	if (wrqu->length > 128)
@@ -10370,6 +10379,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 		pch = tmp;
 		DBG_871X("pch=%s",pch);
 
+		extra_len = strlen(extra);
 		while( *pch != '\0' ) {
 			pnext = strpbrk(pch, " ");
 			if (!pnext)
@@ -10378,7 +10388,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 			pnext++;
 			if ( *pnext != '\0' ) {
 				strtout = simple_strtoul (pnext , &ptmp, 16);
-				sprintf( extra, "%s %d" ,extra ,strtout );
+				extra_len += sprintf( extra + extra_len, " %d", strtout );
 			} else {
 				break;
 			}
@@ -10404,6 +10414,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 		pch = tmp;
 		DBG_871X("pch=%s",pch);
 
+		extra_len = strlen(extra);
 		while( *pch != '\0' ) {
 			pnext = strpbrk(pch, " ");
 			if (!pnext)
@@ -10412,7 +10423,7 @@ static int rtw_mp_read_reg(struct net_device *dev,
 			pnext++;
 			if ( *pnext != '\0' ) {
 				strtout = simple_strtoul (pnext , &ptmp, 16);
-				sprintf( extra, "%s %d" ,extra ,strtout );
+				extra_len += sprintf( extra + extra_len, " %d", strtout );
 			} else {
 				break;
 			}
@@ -10490,6 +10501,7 @@ static int rtw_mp_read_rf(struct net_device *dev,
 	u32 path, addr;
 	u32 ret,i=0 ,j=0,strtou=0;
 	PADAPTER padapter = rtw_netdev_priv(dev);
+	size_t extra_len = 0;
 
 
 	if (wrqu->length > 128) return -EFAULT;
@@ -10525,13 +10537,13 @@ static int rtw_mp_read_rf(struct net_device *dev,
 		pnext++;
 		if ( *pnext != '\0' ) {
 			strtou = simple_strtoul (pnext , &ptmp, 16);
-			sprintf( extra, "%s %d" ,extra ,strtou );
+			extra_len += sprintf( extra + extra_len, " %d", strtou );
 		} else {
 			break;
 		}
 		pch = pnext;
 	}
-	wrqu->length = strlen(extra);
+	wrqu->length = extra_len;
 
 	return 0;
 }
@@ -11979,20 +11991,20 @@ todo:
 	mptbt_BtControlProcess(padapter, &BtReq);
 
 	if (readtherm == 0) {
-		sprintf(extra, "BT thermal=");
+		extra_len = sprintf(extra, "BT thermal=");
 		for (i=4; i<pMptCtx->mptOutLen; i++) {
 			if ((pMptCtx->mptOutBuf[i]==0x00) && (pMptCtx->mptOutBuf[i+1]==0x00))
 				goto exit;
 
 #ifdef CONFIG_RTL8723A
-			sprintf(extra, "%s %d ", extra, (pMptCtx->mptOutBuf[i]& 0x3f));
+			extra_len += sprintf(extra + extra_len, " %d ", (pMptCtx->mptOutBuf[i]& 0x3f));
 #else
-			sprintf(extra, "%s %d ", extra, (pMptCtx->mptOutBuf[i]& 0x1f));
+			extra_len += sprintf(extra + extra_len, " %d ", (pMptCtx->mptOutBuf[i]& 0x1f));
 #endif
 		}
 	} else {
 		for (i=4; i<pMptCtx->mptOutLen; i++) {
-			sprintf(extra, "%s 0x%x ", extra, pMptCtx->mptOutBuf[i]);
+			extra_len += sprintf(extra + extra_len, " 0x%x ", pMptCtx->mptOutBuf[i]);
 		}
 	}
 
diff --git a/drivers/net/wireless/rtl8821cu/core/rtw_mp.c b/drivers/net/wireless/rtl8821cu/core/rtw_mp.c
index d966fac..1cc3585 100755
--- a/drivers/net/wireless/rtl8821cu/core/rtw_mp.c
+++ b/drivers/net/wireless/rtl8821cu/core/rtw_mp.c
@@ -2423,14 +2423,17 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 
 	data[0] = '\0';
 
-	i = psd_start;
-	while (i < psd_stop) {
-		if (i >= psd_pts)
-			psd_data = rtw_GetPSDData(pAdapter, i - psd_pts);
-		else
-			psd_data = rtw_GetPSDData(pAdapter, i);
-		sprintf(data, "%s%x ", data, psd_data);
-		i++;
+	{
+		size_t extra_len = strlen(data);
+		i = psd_start;
+		while (i < psd_stop) {
+			if (i >= psd_pts)
+				psd_data = rtw_GetPSDData(pAdapter, i - psd_pts);
+			else
+				psd_data = rtw_GetPSDData(pAdapter, i);
+			extra_len += sprintf(data + extra_len, "%x ", psd_data);
+			i++;
+		}
 	}
 
 #ifdef CONFIG_LONG_DELAY_ISSUE
diff --git a/drivers/net/wireless/rtl8821cu/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c b/drivers/net/wireless/rtl8821cu/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c
index b9c00a8..91bea38 100755
--- a/drivers/net/wireless/rtl8821cu/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c
+++ b/drivers/net/wireless/rtl8821cu/hal/phydm/halrf/rtl8821c/halrf_iqk_8821c.c
@@ -576,9 +576,9 @@ void _iqk_reload_iqk_setting_8821c(struct dm_struct *dm, u8 channel,
 				odm_write_4byte(dm, 0x1bd8, ((0xc0000000 >> idx) + 0x1) + (i * 4) + (iqk_info->iqk_cfir_imag[channel][path][idx][i] << 9));
 			}
 			if (idx == 0)
-				odm_set_bb_reg(dm, iqk_apply[path], BIT(0), ~(iqk_info->iqk_fail_report[channel][path][idx]));
+				odm_set_bb_reg(dm, iqk_apply[path], BIT(0), !(iqk_info->iqk_fail_report[channel][path][idx]));
 			else
-				odm_set_bb_reg(dm, iqk_apply[path], BIT(10), ~(iqk_info->iqk_fail_report[channel][path][idx]));
+				odm_set_bb_reg(dm, iqk_apply[path], BIT(10), !(iqk_info->iqk_fail_report[channel][path][idx]));
 		}
 		odm_set_bb_reg(dm, R_0x1bd8, MASKDWORD, 0x0);
 		odm_set_bb_reg(dm, R_0x1b0c, BIT(13) | BIT(12), 0x0);
diff --git a/drivers/net/wireless/rtl8821cu/os_dep/linux/ioctl_mp.c b/drivers/net/wireless/rtl8821cu/os_dep/linux/ioctl_mp.c
index ad8df2d..4408b34 100755
--- a/drivers/net/wireless/rtl8821cu/os_dep/linux/ioctl_mp.c
+++ b/drivers/net/wireless/rtl8821cu/os_dep/linux/ioctl_mp.c
@@ -570,15 +570,15 @@ int rtw_mp_txpower_index(struct net_device *dev,
 		sprintf(extra, "patha=%d", txpower_inx);
 		if (phal_data->rf_type > RF_1T2R) {
 			txpower_inx = mpt_ProQueryCalTxPower(padapter, 1);
-			sprintf(extra, "%s,pathb=%d", extra, txpower_inx);
+			sprintf(extra + strlen(extra), ",pathb=%d", txpower_inx);
 		}
 		if (phal_data->rf_type > RF_2T4R) {
 			txpower_inx = mpt_ProQueryCalTxPower(padapter, 2);
-			sprintf(extra, "%s,pathc=%d", extra, txpower_inx);
+			sprintf(extra + strlen(extra), ",pathc=%d", txpower_inx);
 		}
 		if (phal_data->rf_type > RF_3T4R) {
 			txpower_inx = mpt_ProQueryCalTxPower(padapter, 3);
-			sprintf(extra, "%s,pathd=%d", extra, txpower_inx);
+			sprintf(extra + strlen(extra), ",pathd=%d", txpower_inx);
 		}
 	}
 	wrqu->length = strlen(extra);
@@ -1820,7 +1820,7 @@ int rtw_mp_tx(struct net_device *dev,
 			char *pextra = extra;
 			RTW_INFO("Got format [ch=%d,bw=%d,rate=%d,pwr=%d,ant=%d,tx=%d]\n", channel, bandwidth, rate, txpower, ant, txmode);
 			_rtw_memset(extra, 0, wrqu->data.length);
-			sprintf(extra, "Change Current channel %d to channel %d", padapter->mppriv.channel , channel);
+			pextra += sprintf(pextra, "Change Current channel %d to channel %d", padapter->mppriv.channel , channel);
 			padapter->mppriv.channel = channel;
 			SetChannel(padapter);
 			pHalData->current_channel = channel;
@@ -2181,6 +2181,7 @@ int rtw_efuse_mask_file(struct net_device *dev,
 		char	*ptmp, tmp;
 		u8	count = 0;
 		u8	i = 0;
+		size_t extra_len;
 
 		ptmp = extra;
 		pch = strsep(&ptmp, ",");
@@ -2206,13 +2207,15 @@ int rtw_efuse_mask_file(struct net_device *dev,
 
 		 } while (count < 64);
 
-		for (i = 0; i < count; i++)
-			sprintf(extra, "%s:%02x", extra, maskfileBuffer[i]);
+		extra_len = strlen(extra);
+		for (i = 0; i < count; i++) {
+			extra_len += sprintf(extra + extra_len, ":%02x", maskfileBuffer[i]);
+		}
 
 		padapter->registrypriv.bFileMaskEfuse = _TRUE;
 
-		sprintf(extra, "%s\nLoad Efuse Mask data %d hex ok\n", extra, count);
-		wrqu->data.length = strlen(extra);
+		extra_len += sprintf(extra + extra_len, "\nLoad Efuse Mask data %d hex ok\n", count);
+		wrqu->data.length = extra_len;
 		return 0;
 	}
 	rtw_efuse_mask_file_path = extra;
@@ -2634,16 +2637,20 @@ todo:
 	mptbt_BtControlProcess(padapter, &BtReq);
 
 	if (readtherm == 0) {
+		size_t extra_len;
 		sprintf(extra, "BT thermal=");
+		extra_len = strlen(extra);
 		for (i = 4; i < pMptCtx->mptOutLen; i++) {
 			if ((pMptCtx->mptOutBuf[i] == 0x00) && (pMptCtx->mptOutBuf[i + 1] == 0x00))
 				goto exit;
 
-			sprintf(extra, "%s %d ", extra, (pMptCtx->mptOutBuf[i] & 0x1f));
+			extra_len += sprintf(extra + extra_len, " %d ", (pMptCtx->mptOutBuf[i] & 0x1f));
 		}
 	} else {
+		size_t extra_len;
+		extra_len = strlen(extra);
 		for (i = 4; i < pMptCtx->mptOutLen; i++)
-			sprintf(extra, "%s 0x%x ", extra, pMptCtx->mptOutBuf[i]);
+			extra_len += sprintf(extra + extra_len, " 0x%x ", pMptCtx->mptOutBuf[i]);
 	}
 
 exit:
diff --git a/drivers/net/wireless/rtl88x2bu/core/rtw_mp.c b/drivers/net/wireless/rtl88x2bu/core/rtw_mp.c
index ad9755b..8272e65 100644
--- a/drivers/net/wireless/rtl88x2bu/core/rtw_mp.c
+++ b/drivers/net/wireless/rtl88x2bu/core/rtw_mp.c
@@ -2123,14 +2123,17 @@ u32 mp_query_psd(PADAPTER pAdapter, u8 *data)
 
 	data[0] = '\0';
 
-	i = psd_start;
-	while (i < psd_stop) {
-		if (i >= psd_pts)
-			psd_data = rtw_GetPSDData(pAdapter, i - psd_pts);
-		else
-			psd_data = rtw_GetPSDData(pAdapter, i);
-		sprintf(data, "%s%x ", data, psd_data);
-		i++;
+	{
+		size_t extra_len = strlen(data);
+		i = psd_start;
+		while (i < psd_stop) {
+			if (i >= psd_pts)
+				psd_data = rtw_GetPSDData(pAdapter, i - psd_pts);
+			else
+				psd_data = rtw_GetPSDData(pAdapter, i);
+			extra_len += sprintf(data + extra_len, "%x ", psd_data);
+			i++;
+		}
 	}
 
 #ifdef CONFIG_LONG_DELAY_ISSUE
diff --git a/drivers/net/wireless/rtl88x2bu/os_dep/linux/ioctl_mp.c b/drivers/net/wireless/rtl88x2bu/os_dep/linux/ioctl_mp.c
index e82c39f..0eaed12 100644
--- a/drivers/net/wireless/rtl88x2bu/os_dep/linux/ioctl_mp.c
+++ b/drivers/net/wireless/rtl88x2bu/os_dep/linux/ioctl_mp.c
@@ -1795,7 +1795,7 @@ int rtw_mp_tx(struct net_device *dev,
 			char *pextra = extra;
 			RTW_INFO("Got format [ch=%d,bw=%d,rate=%d,pwr=%d,ant=%d,tx=%d]\n", channel, bandwidth, rate, txpower, ant, txmode);
 			_rtw_memset(extra, 0, wrqu->data.length);
-			sprintf(extra, "Change Current channel %d to channel %d", padapter->mppriv.channel , channel);
+			pextra += sprintf(pextra, "Change Current channel %d to channel %d", padapter->mppriv.channel , channel);
 			padapter->mppriv.channel = channel;
 			SetChannel(padapter);
 			pHalData->current_channel = channel;
@@ -2159,6 +2159,7 @@ int rtw_efuse_mask_file(struct net_device *dev,
 		u8	count = 0;
 		u8	i = 0;
 		u32	datalen = 0;
+		size_t extra_len;
 
 		ptmp = extra;
 		pch = strsep(&ptmp, ",");
@@ -2184,12 +2185,13 @@ int rtw_efuse_mask_file(struct net_device *dev,
 
 		 } while (count < 64);
 
+		extra_len = strlen(extra);
 		for (i = 0; i < count; i++)
-			sprintf(extra, "%s:%02x", extra, maskfileBuffer[i]);
+			extra_len += sprintf(extra + extra_len, ":%02x", maskfileBuffer[i]);
 
 		padapter->registrypriv.bFileMaskEfuse = _TRUE;
 
-		sprintf(extra, "%s\nLoad Efuse Mask data %d hex ok\n", extra, count);
+		extra_len += sprintf(extra + extra_len, "\nLoad Efuse Mask data %d hex ok\n", count);
 		wrqu->data.length = strlen(extra);
 		return 0;
 	}
@@ -2612,16 +2614,18 @@ todo:
 	mptbt_BtControlProcess(padapter, &BtReq);
 
 	if (readtherm == 0) {
+		size_t extra_len;
 		sprintf(extra, "BT thermal=");
 		for (i = 4; i < pMptCtx->mptOutLen; i++) {
 			if ((pMptCtx->mptOutBuf[i] == 0x00) && (pMptCtx->mptOutBuf[i + 1] == 0x00))
 				goto exit;
 
-			sprintf(extra, "%s %d ", extra, (pMptCtx->mptOutBuf[i] & 0x1f));
+			extra_len += sprintf(extra + extra_len, " %d ", (pMptCtx->mptOutBuf[i] & 0x1f));
 		}
 	} else {
+		size_t extra_len;
 		for (i = 4; i < pMptCtx->mptOutLen; i++)
-			sprintf(extra, "%s 0x%x ", extra, pMptCtx->mptOutBuf[i]);
+			extra_len += sprintf(extra + extra_len, " 0x%x ", pMptCtx->mptOutBuf[i]);
 	}
 
 exit:
