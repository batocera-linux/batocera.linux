--- a/drivers/gpu/drm/panel/panel-sitronix-st7703.c	2021-05-11 14:47:41.000000000 +0200
+++ b/drivers/gpu/drm/panel/panel-sitronix-st7703.c	2021-05-12 22:34:36.556055949 +0200
@@ -347,6 +349,183 @@
 	.height_mm   = 136,
 };
 
+static int gameforce_init_sequence(struct st7703 *ctx)
+{
+	struct mipi_dsi_device *dsi = to_mipi_dsi_device(ctx->dev);
+
+	/*
+	 * Init sequence was supplied by the panel vendor.
+	 */
+
+	/* Magic sequence to unlock user commands below. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETEXTC, 0xF1, 0x12, 0x83);
+	msleep(20);
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETMIPI,
+			  0x31, /* VC_main = 0, Lane_Number = 3 (4 lanes) */
+			  0x81, /* DSI_LDO_SEL = 1.7V, RTERM = 90 Ohm */
+			  0x05, /* IHSRX = x6 (Low High Speed driving ability) */
+			  0xF9, /* TX_CLK_SEL = fDSICLK/16 */
+			  0x0E, /* HFP_OSC (min. HFP number in DSI mode) */
+			  0x0E, /* HBP_OSC (min. HBP number in DSI mode) */
+			  /* The rest is undocumented in ST7703 datasheet */
+			  0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+			  0x44, 0x25, 0x00, 0x91, 0x0a, 0x00, 0x00, 0x02,
+			  0x4F, 0xD1, 0x00, 0x00, 0x37);
+
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETPOWER_EXT, 0x25); /* PCCS = 2, ECP_DC_DIV = 1/4 HSYNC */
+
+	/* Undocumented command. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_UNKNOWN_BF, 0x02, 0x11, 0x00);
+
+	/* RGB I/F porch timing */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETRGBIF,
+			  0x0C, /* VBP_RGB_GEN */
+			  0x10, /* VFP_RGB_GEN */
+			  0x0A, /* DE_BP_RGB_GEN */
+			  0x50, /* DE_FP_RGB_GEN */
+			  /* The rest is undocumented in ST7703 datasheet */
+			  0x03, 0xFF,
+			  0x00, 0x00,
+			  0x00, 0x00);
+
+	/* Source driving settings. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETSCR,
+			  0x73, /* N_POPON */
+			  0x73, /* N_NOPON */
+			  0x50, /* I_POPON */
+			  0x50, /* I_NOPON */
+			  0x00, /* SCR[31,24] */
+			  0x00, /* SCR[23,16] */
+			  0x08, /* SCR[15,8] */
+			  0x70, /* SCR[7,0] */
+			  0x00  /* Undocumented */);
+
+	/* NVDDD_SEL = -1.8V, VDDD_SEL = out of range (possibly 1.9V?) */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETVDC, 0x46);
+
+	/*
+	 * SS_PANEL = 1 (reverse scan), GS_PANEL = 0 (normal scan)
+	 * REV_PANEL = 1 (normally black panel), BGR_PANEL = 1 (BGR)
+	 */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETPANEL, 0x0B);
+
+	/* Zig-Zag Type C column inversion. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETCYC, 0x80);
+
+	/* Set display resolution. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETDISP,
+			  0x00, /* NL = 480 */
+			  0x13, /* RES_V_LSB = 0, BLK_CON = VSSD,
+				 * RESO_SEL = 720RGB
+				 */
+			  0xF0  /* WHITE_GND_EN = 1 (GND),
+				 * WHITE_FRAME_SEL = 7 frames,
+				 * ISC = 0 frames
+				 */);
+
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETEQ,
+			  0x07, /* PNOEQ */
+			  0x07, /* NNOEQ */
+			  0x0B, /* PEQGND */
+			  0x0B, /* NEQGND */
+			  0x03, /* PEQVCI */
+			  0x0B, /* NEQVCI */
+			  0x00, /* PEQVCI1 */
+			  0x00, /* NEQVCI1 */
+			  0x00, /* reserved */
+			  0x00, /* reserved */
+			  0xFF, /* reserved */
+			  0x00, /* reserved */
+			  0xC0, /* ESD_DET_DATA_WHITE = 1, ESD_WHITE_EN = 1 */
+			  0x10  /* SLPIN_OPTION = 1 (no need vsync after sleep-in)
+				 * VEDIO_NO_CHECK_EN = 0
+				 * ESD_WHITE_GND_EN = 0
+				 * ESD_DET_TIME_SEL = 0 frames
+				 */);
+
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETPOWER,
+			  0x53, /* VBTHS, VBTLS: VGH = 17V, VBL = -11V */
+			  0x00, /* FBOFF_VGH = 0, FBOFF_VGL = 0 */
+			  0x1E, /* VRP  */
+			  0x1E, /* VRN */
+			  0x77, /* reserved */
+			  0xE1, /* APS = 1 (small),
+				 * VGL_DET_EN = 1, VGH_DET_EN = 1,
+				 * VGL_TURBO = 1, VGH_TURBO = 1
+				 */
+			  0xCC, /* VGH1_L_DIV, VGL1_L_DIV (1.5MHz) */
+			  0xDD, /* VGH1_R_DIV, VGL1_R_DIV (1.5MHz) */
+			  0x67, /* VGH2_L_DIV, VGL2_L_DIV (2.6MHz) */
+			  0x77, /* VGH2_R_DIV, VGL2_R_DIV (2.6MHz) */
+			  0x33, /* VGH3_L_DIV, VGL3_L_DIV (4.5MHz) */
+			  0x33  /* VGH3_R_DIV, VGL3_R_DIV (4.5MHz) */);
+
+	/* Reference voltage. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETBGP,
+			  0x10, /* VREF_SEL = 4.2V */
+			  0x10  /* NVREF_SEL = 4.2V */);
+	msleep(20);
+
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETVCOM,
+			  0x6C, /* VCOMDC_F = -0.67V */
+			  0x7C  /* VCOMDC_B = -0.67V */);
+
+	/* This command is to set forward GIP timing. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETGIP1,
+			0x08, 0x00, 0x0E, 0x00, 0x00, 0xB0, 0xB1, 0x11,
+			0x31, 0x23, 0x28, 0x10, 0xB0, 0xB1, 0x27, 0x08,
+			0x00, 0x04, 0x02, 0x00, 0x00, 0x00, 0x00, 0x04,
+			0x02, 0x00, 0x00, 0x00, 0x88, 0x88, 0xBA, 0x60,
+			0x24, 0x08, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88,
+			0x88, 0xBA, 0x71, 0x35, 0x18, 0x88, 0x88, 0x88, 
+			0x88, 0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 
+			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00);
+
+	/* This command is to set backward GIP timing. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETGIP2,
+			0x97, 0x0A, 0x82, 0x02, 0x13, 0x07, 0x00, 0x00, 
+			0x00, 0x00, 0x00, 0x00, 0x80, 0x88, 0xBA, 0x17,
+			0x53, 0x88, 0x88, 0x88, 0x88, 0x88, 0x88, 0x81, 
+			0x88, 0xBA, 0x06, 0x42, 0x88, 0x88, 0x88, 0x88,
+			0x88, 0x88, 0x23, 0x10, 0x00, 0x02, 0x80, 0x00,
+			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+			0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
+			0x00, 0x00, 0x00, 0x00, 0x00);
+
+	/* Adjust the gamma characteristics of the panel. */
+	dsi_dcs_write_seq(dsi, ST7703_CMD_SETGAMMA,
+			0x00, 0x07, 0x0B, 0x27, 0x2D, 0x3F, 0x3B, 0x37,
+			0x05, 0x0A, 0x0B, 0x0F, 0x11, 0x0F, 0x12, 0x12,
+			0x18, 0x00, 0x07, 0x0B, 0x27, 0x2D, 0x3F, 0x3B,
+			0x37, 0x05, 0x0A, 0x0B, 0x0F, 0x11, 0x0F, 0x12,
+			0x12, 0x18);
+
+	return 0;
+}
+
+static const struct drm_display_mode gameforce_mode = {
+    .hdisplay    = 640,
+    .hsync_start = 640 + 120,
+    .hsync_end   = 640 + 120 + 120,
+    .htotal      = 640 + 120 + 120 + 120,
+    .vdisplay    = 480,
+    .vsync_start = 480 + 13,
+    .vsync_end   = 480 + 13 + 17,
+    .vtotal      = 480 + 13 + 17 + 5,
+    .clock       = 30900,
+    .flags       = DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC,
+    .width_mm    = 53,
+    .height_mm   = 71,
+};
+
+static const struct st7703_panel_desc gameforce_desc = {
+	.mode = &gameforce_mode,
+	.lanes = 2,
+	.mode_flags = MIPI_DSI_MODE_VIDEO | MIPI_DSI_MODE_VIDEO_SYNC_PULSE | MIPI_DSI_MODE_VIDEO_BURST | MIPI_DSI_MODE_LPM /*| MIPI_DSI_MODE_EOT_PACKET*/,
+	.format = MIPI_DSI_FMT_RGB888,
+	.init_sequence = gameforce_init_sequence,
+};
+
 static const struct st7703_panel_desc xbd599_desc = {
 	.mode = &xbd599_mode,
 	.lanes = 4,
@@ -619,6 +798,7 @@
 static const struct of_device_id st7703_of_match[] = {
 	{ .compatible = "rocktech,jh057n00900", .data = &jh057n00900_panel_desc },
 	{ .compatible = "xingbangda,xbd599", .data = &xbd599_desc },
+	{ .compatible = "gameforce,st7703", .data = &gameforce_desc },
 	{ /* sentinel */ }
 };
 MODULE_DEVICE_TABLE(of, st7703_of_match);
