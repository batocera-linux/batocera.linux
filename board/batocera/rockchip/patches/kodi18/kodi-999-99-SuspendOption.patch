MRFIXIT: Customize and enable the suspend function for rockchip boards
Also add code to reinit the CEC connection after the resume
--- a/xbmc/peripherals/devices/PeripheralCecAdapter.h
+++ b/xbmc/peripherals/devices/PeripheralCecAdapter.h
@@ -80,6 +80,7 @@
     ~CPeripheralCecAdapter(void) override;
 
     void Announce(ANNOUNCEMENT::AnnouncementFlag flag, const char *sender, const char *message, const CVariant &data) override;
+    bool ReopenConnection(bool bAsync = false);
 
     // audio control
     bool HasAudioControl(void);
@@ -110,7 +111,6 @@
     bool IsRunning(void) const;
 
     bool OpenConnection(void);
-    bool ReopenConnection(bool bAsync = false);
 
     void SetConfigurationFromSettings(void);
     void SetConfigurationFromLibCEC(const CEC::libcec_configuration &config);
--- a/xbmc/powermanagement/PowerManager.cpp
+++ b/xbmc/powermanagement/PowerManager.cpp
@@ -24,7 +24,6 @@
 #include "interfaces/builtins/Builtins.h"
 #include "network/Network.h"
 #include "pvr/PVRManager.h"
-#include "ServiceBroker.h"
 #include "settings/lib/Setting.h"
 #include "settings/lib/SettingsManager.h"
 #include "settings/Settings.h"
@@ -33,10 +32,16 @@
 #include "weather/WeatherManager.h"
 #include "windowing/WinSystem.h"
 
+#include "Util.h"
+#include "peripherals/Peripherals.h"
+#include "peripherals/devices/PeripheralCecAdapter.h"
+
 #if defined(TARGET_WINDOWS_DESKTOP)
 extern HWND g_hWnd;
 #endif
 
+using namespace PERIPHERALS;
+
 CPowerManager::CPowerManager()
 {
   m_settings = CServiceBroker::GetSettingsComponent()->GetSettings();
@@ -115,7 +115,61 @@
 
 bool CPowerManager::Suspend()
 {
-  return (CanSuspend() && m_instance->Suspend());
+  PeripheralVector peripherals;
+  CVariant data;
+
+  CGUIDialogBusy* dialog = CServiceBroker::GetGUI()->GetWindowManager().GetWindow<CGUIDialogBusy>(WINDOW_DIALOG_BUSY);
+  if (dialog)
+    dialog->Open();
+
+  CLog::Log(LOGNOTICE, "%s: Entering Rockchip Suspend", __FUNCTION__);
+
+  CServiceBroker::GetPVRManager().OnSleep();
+  StorePlayerState();
+  g_application.StopPlaying();
+  g_application.StopShutdownTimer();
+  g_application.StopScreenSaverTimer();
+  g_application.CloseNetworkShares();
+
+  // Tell Rockchip to Suspend
+  CUtil::RunCommandLine("/usr/bin/batocera-rockchip-suspend", true);
+
+  CServiceBroker::GetNetwork().WaitForNet();
+
+  // reset timers
+  g_application.ResetShutdownTimers();
+
+  if (dialog)
+    dialog->Close(true); // force close. no closing animation, sound etc at this early stage
+
+#if defined(HAS_SDL) || defined(TARGET_WINDOWS)
+  if (CServiceBroker::GetWinSystem()->IsFullScreen())
+  {
+#if defined(TARGET_WINDOWS_DESKTOP)
+    ShowWindow(g_hWnd, SW_RESTORE);
+    SetForegroundWindow(g_hWnd);
+#endif
+  }
+  g_application.ResetScreenSaver();
+#endif
+
+  g_application.UpdateLibraries();
+  CServiceBroker::GetWeatherManager().Refresh();
+  CServiceBroker::GetPVRManager().OnWake();
+  RestorePlayerState();
+
+  // Reset CEC
+  if (CServiceBroker::GetPeripherals().GetPeripheralsWithFeature(peripherals, FEATURE_CEC))
+  {
+    for (auto& peripheral : peripherals)
+    {
+      std::shared_ptr<CPeripheralCecAdapter> cecDevice =
+          std::static_pointer_cast<CPeripheralCecAdapter>(peripheral);
+      cecDevice->ReopenConnection(true);
+    }
+  }
+
+  return true;
 }
 
 bool CPowerManager::Hibernate()

--- a/addons/skin.estuary/xml/DialogButtonMenu.xml	2018-04-20 21:39:33.920915856 -0400
+++ b/addons/skin.estuary/xml/DialogButtonMenu.xml	2018-04-20 21:42:32.904915856 -0400
@@ -40,8 +40,8 @@
 					</item>
 					<item>
 						<label>$LOCALIZE[13011]</label>
 						<onclick>Suspend()</onclick>
-						<visible>System.CanSuspend</visible>
+						<visible>True</visible>
 					</item>
 					<item>
 						<label>$LOCALIZE[13010]</label>
