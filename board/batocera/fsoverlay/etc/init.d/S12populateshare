#!/bin/bash

if test "$1" != "start"
then
  exit 0
fi

IN=/recalbox/share_init
OUT=/recalbox/share
# force the creation of some directories
for DIR in cheats \
           system/.cache \
           system/.config/lirc \
           system/.emulationstation/themes \
           system/bluetooth \
           system/configs \
           system/logs
do
    if test ! -e "$OUT""/""$DIR"
    then
        mkdir -p "$OUT""/""$DIR"
    fi
done

# directories / files to copy when initializing the user data
#
# NO UPDATE IS POSSIBLE ON THESE DIRECTORIES WHEN RECALBOX IS UPDATED
#
# there are almost empty, it's just for the structure
# the user can delete the directory, it will recreate the structure
# the user can delete files, files will not be recreated
for FILE in music bios extractions kodi saves screenshots \
            system/.config/lirc/lircd.conf \
            system/.emulationstation/{es_input.cfg,es_settings.cfg} \
            system/{.hatari,.kodi} \
            system/configs/{fba,moonlight,mupen64,ppsspp,reicast,retroarch,shadersets,xarcade2jstick,dosbox,dolphin-emu,advancemame,vice,amiberry} \
            system/recalbox.conf \
            bios/mame2003
do
    # not wanted for kodi
    test -e "$IN""/""$FILE" && test ! -e "$OUT""/""$FILE" && cp -r "$IN""/""$FILE" "$OUT""/""$FILE"
done

# directories to force directories exists
# files are linked
#
# ONLY NEW DIRECTORIES ARE UPDATED WHEN RECALBOX IS UPDATED
#
# the user can't delete any directory, otherwise, it will recreate it, with link inside
# the user can delete links and add its own files
# to reset the directory or update it, the user has to remove the directory (we are unable to differenciate new files from recalbox update from a file removed by the user)
for DIR in roms roms/mame/mame2003
do
    if mkdir -p "$OUT""/""$DIR"
    then
	find "$IN""/""$DIR" -mindepth 1 -maxdepth 1 -type d |
	    while read SUBDIR
	    do
		BNAME=$(basename "$SUBDIR")
		TDIR="$OUT""/""$DIR""/""$BNAME"
		if test ! -e "$TDIR" # ASSUME THAT PARENTS ARE LISTED BEFORE CHILDREN
		then
		    cp -r "$SUBDIR" "$TDIR"
		fi
	    done
    fi
done

# ssh : create the ssh key while the -R option of dropbear try a chown or an operation which is not permitted on fat32
if mkdir -p /recalbox/share/system/ssh
then
    test -e /recalbox/share/system/ssh/dropbear_ecdsa_host_key || dropbearkey -t ecdsa -f /recalbox/share/system/ssh/dropbear_ecdsa_host_key
    test -e /recalbox/share/system/ssh/dropbear_rsa_host_key   || dropbearkey -t rsa   -f /recalbox/share/system/ssh/dropbear_rsa_host_key
    test -e /recalbox/share/system/ssh/dropbear_dss_host_key   || dropbearkey -t dss   -f /recalbox/share/system/ssh/dropbear_dss_host_key
fi

# bluetooth : now gotta tar/untar, the directory structure for bluez5 is more complex
# once untar, delete the cache folder. The exclude tar option of busybox is dreadful
btTar=/recalbox/share/system/bluetooth/bluetooth.tar
tar xvf "$btTar" -C / 2>/dev/null 

# udev : create a link for rules persistance
mkdir -p /recalbox/share/system/udev/rules.d
rm -rf /run/udev/rules.d
ln -s /recalbox/share/system/udev/rules.d/ /run/udev/

## if the system was upgraded, fixes some files
# fixes
XNEW=$(cat /recalbox/batocera.version)
XCUR=$(cat /recalbox/share/system/data.version)
XARCH=$(cat /recalbox/recalbox.arch)
test "${XCUR}" = "${XNEW}" && exit 0

# retroarchcustom.cfg
retroarchcustom_fix_force_param() {
    L_CFG="/recalbox/share/system/configs/retroarch/retroarchcustom.cfg"
    L_PARAM=$1
    L_VALUE=$2

    grep -qE "^[ ]*${L_PARAM}[ ]*=[ ]*\"${L_VALUE}\"[ ]*$" "${L_CFG}" && return 0 # already done

    if grep -qE "^[ ]*${L_PARAM}[ ]*=" "${L_CFG}"
    then
	sed -i -e s+"^[ ]*${L_PARAM}[ ]*=.*$"+"${L_PARAM} = \"${L_VALUE}\""+ "${L_CFG}"
    else
	(echo ; echo "${L_PARAM} = \"${L_VALUE}\"") >> "${L_CFG}"
    fi
}

retroarchcustom_fix_remove_param_value() {
    L_CFG="/recalbox/share/system/configs/retroarch/retroarchcustom.cfg"
    L_PARAM=$1
    L_VALUE=$2

    grep -qE    "^[ ]*${L_PARAM}[ ]*=[ ]*\"?${L_VALUE}\"?[ ]*$"     "${L_CFG}" || return 0 # already done
    sed -i -e s+"^[ ]*${L_PARAM}[ ]*=[ ]*\"\?${L_VALUE}\"\?[ ]*$"+""+ "${L_CFG}"
}

recalboxconf_force_value() {
    L_CFG="/recalbox/share/system/recalbox.conf"
    L_PARAM=$1
    L_VALUE=$2

    grep -q "${L_PARAM}" "${L_CFG}" && return 0 # already set
    echo "${L_PARAM}=${L_VALUE}" >> "${L_CFG}"
}

# retroarch
retroarchcustom_fix_force_param "video_font_path"             "/usr/share/fonts/dejavu/DejaVuSansMono.ttf"
retroarchcustom_fix_force_param "menu_driver"                 "rgui"
retroarchcustom_fix_force_param "menu_swap_ok_cancel_buttons" "true"

if test "${XARCH}" == x86 -o "${XARCH}" == x86_64
then
    retroarchcustom_fix_remove_param_value "video_driver"                "sdl2"  # don't use anymore this value while it doesn't allow the shaders to work
fi
if test "${XARCH}" == odroidxu4
then
    KVERSION=$(uname -r | cut -d '.' -f 1)
    if test "${KVERSION}" = 4
    then
	retroarchcustom_fix_force_param "video_driver"                       "sdl2"  # kernel 4.x issue
    else
	retroarchcustom_fix_remove_param_value "video_driver"                "sdl2"  # kernel 3.x
    fi
fi

retroarchcustom_fix_remove_param_value "video_black_frame_insertion" "true"  # don't use anymore this value while it doesn't allow the shaders to work
retroarchcustom_fix_force_param        "pause_nonactive"             "false" # required at least on x86 x86_64 otherwise, the game is paused at launch

# recalbox.conf
if test "${XARCH}" == rpi1 -o "${XARCH}" == rpi2 -o "${XARCH}" == rpi3
then
    recalboxconf_force_value "amiga500.emulator" "amiberry"
    recalboxconf_force_value "amiga500.core"     "A500"
    recalboxconf_force_value "amiga500p.emulator" "amiberry"
    recalboxconf_force_value "amiga500p.core"     "A500P"
    recalboxconf_force_value "amiga1200.emulator" "amiberry"
    recalboxconf_force_value "amiga1200.core"     "A1200"
    recalboxconf_force_value "amiga4000.emulator" "amiberry"
    recalboxconf_force_value "amiga4000.core"     "A4000"
    recalboxconf_force_value "amigacd32.emulator" "amiberry"
    recalboxconf_force_value "amigacd32.core"     "CD32"
fi

# save to avoid to redo that all the times
cp /recalbox/batocera.version /recalbox/share/system/data.version || exit 1

exit 0
# END
