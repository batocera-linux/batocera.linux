#!/bin/bash

if test "$1" != "start"
then
  exit 0
fi

IN=/usr/share/batocera/datainit
OUT=/userdata
# force the creation of some directories
for DIR in cheats \
           system/.cache \
           system/.config/lirc \
           system/bluetooth \
           system/configs \
           system/logs
do
    if test ! -e "$OUT""/""$DIR"
    then
        mkdir -p "$OUT""/""$DIR"
    fi
done

# directories / files to copy when initializing the user data
#
# NO UPDATE IS POSSIBLE ON THESE DIRECTORIES WHEN batocera.linux IS UPDATED
#
# there are almost empty, it's just for the structure
# the user can delete the directory, it will recreate the structure
# the user can delete files, files will not be recreated
for FILE in music bios extractions kodi saves screenshots \
            system/.config/lirc/lircd.conf \
            system/configs/emulationstation/{es_input.cfg,es_settings.cfg} \
            system/{.hatari,.kodi} \
            system/configs/{moonlight,reicast,retroarch,shadersets,xarcade2jstick,dosbox,vice,amiberry,daphne} \
            system/batocera.conf \
            bios/mame2003
do
    # not wanted for kodi
    test -e "${IN}/${FILE}" && test ! -e "${OUT}/${FILE}" && mkdir -p $(dirname "${OUT}/${FILE}") && cp -r "${IN}/${FILE}" "${OUT}/${FILE}"
done

### specific directories
# decorations - copy only the readme file
mkdir -p "${OUT}/decorations"
test -e "${OUT}/decorations/readme.txt" || cp -r "${IN}/decorations/readme.txt" "${OUT}/decorations/readme.txt"

# themes
mkdir -p "${OUT}/themes"

# directories to force directories exists
# files are linked
#
# ONLY NEW DIRECTORIES ARE UPDATED WHEN batocera.linux IS UPDATED
#
# the user can't delete any directory, otherwise, it will recreate it, with link inside
# the user can delete links and add its own files
# to reset the directory or update it, the user has to remove the directory (we are unable to differenciate new files from batocera.linux update from a file removed by the user)
for DIR in roms roms/mame/mame2003
do
    if mkdir -p "$OUT""/""$DIR"
    then
	find "$IN""/""$DIR" -mindepth 1 -maxdepth 1 -type d |
	    while read SUBDIR
	    do
		BNAME=$(basename "$SUBDIR")
		TDIR="$OUT""/""$DIR""/""$BNAME"
		if test ! -e "$TDIR" # ASSUME THAT PARENTS ARE LISTED BEFORE CHILDREN
		then
		    cp -r "$SUBDIR" "$TDIR"
		fi
	    done
    fi
done

# ssh : create the ssh key while the -R option of dropbear try a chown or an operation which is not permitted on fat32
if mkdir -p /userdata/system/ssh
then
    test -e /userdata/system/ssh/dropbear_ecdsa_host_key || dropbearkey -t ecdsa -f /userdata/system/ssh/dropbear_ecdsa_host_key
    test -e /userdata/system/ssh/dropbear_rsa_host_key   || dropbearkey -t rsa   -f /userdata/system/ssh/dropbear_rsa_host_key
    test -e /userdata/system/ssh/dropbear_dss_host_key   || dropbearkey -t dss   -f /userdata/system/ssh/dropbear_dss_host_key
fi

# bluetooth : now gotta tar/untar, the directory structure for bluez5 is more complex
# once untar, delete the cache folder. The exclude tar option of busybox is dreadful
btTar=/userdata/system/bluetooth/bluetooth.tar
tar xvf "$btTar" -C / 2>/dev/null 

# udev : create a link for rules persistance
mkdir -p /userdata/system/udev/rules.d
rm -rf /run/udev/rules.d
ln -s /userdata/system/udev/rules.d/ /run/udev/

# save to avoid to redo that all the times
cp /usr/share/batocera/batocera.version /userdata/system/data.version || exit 1

exit 0
# END
