#!/bin/sh

config_script="batocera-config"
log="/userdata/system/logs/batocera.log"

ba_keyboard_lang() {
    settings_lang="$(/usr/bin/batocera-settings-get system.language || echo 'en_US')"
    settings_kb="$(/usr/bin/batocera-settings-get system.kblayout || echo 'us')"
    if [ "$settings_kb" != "" ]; then
        loadkeys "$settings_kb" >> $log
    else
        keyboardmap=$(echo "$settings_lang" | cut -c1-2)
        if [ "$keyboardmap" != "" ]; then
            loadkeys "$keyboardmap" >> $log
        fi
    fi
}

ba_timezone() {
    settings_timezone="$(/usr/bin/batocera-settings-get system.timezone)"
    if [ "$settings_timezone" != "" ]; then
        eval $config_script "tz" "$settings_timezone" >> $log
    fi
}

ba_hostname() {
    settings_hostname="$(/usr/bin/batocera-settings-get system.hostname)"
    if [ "$settings_hostname" != "" ]; then
        hostname "${settings_hostname}"
        echo "127.0.0.1	localhost"             > /etc/hosts
        echo "127.0.1.1	${settings_hostname}" >> /etc/hosts
    fi
}

ba_xarcade2jstick() {
    settings_xarcade="$(/usr/bin/batocera-settings-get controllers.xarcade.enabled)"
    if [ "$settings_xarcade" = "1" ]; then
        # First try : suppose a real X-Arcade is plugged
        /usr/bin/xarcade2jstick -d >/dev/null 2>&1
        if [ $? -ne "0" ]
        then
            # the user must have a keyboard encoder then
            for dev in /usr/share/batocera/datainit/system/configs/xarcade2jstick/*
            do
                dev=$(basename "$dev")
                [ -h "/dev/input/by-id/$dev" ] && /usr/bin/xarcade2jstick -d -e "/dev/input/by-id/$dev" >/dev/null 2>&1 && break
            done
        fi
    fi
}

ba_es_core_dump() {
    sysctl -wq kernel.core_pattern=/userdata/system/logs/core.%e
}

case "$1" in
  start)
    printf "Starting system: "
    # Remove carriage return characters from Windows files
    dos2unix /userdata/system/batocera.conf

    # configure
    ba_keyboard_lang &
    ba_timezone &
    ba_hostname &
    ba_xarcade2jstick &
    ba_es_core_dump &
    echo "done."
    ;;
  stop)
    ;;
  restart|reload)
    ;;
  *)
esac

exit $?
