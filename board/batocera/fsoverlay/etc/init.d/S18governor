#!/bin/sh

if ! { [ -e /sys/devices/system/cpu/cpufreq/policy0/scaling_governor ] && [ -e /sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors ]; }
then
  exit 0
fi

# This function is used by /board/batocera/rockchip/rk3326/fsoverlay/usr/share/batocera/configgen/scripts
# It should be reworked to simply be included here instead of relying on an fsoverlay.
save_governor() {
  for policy in $(cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors)
  do
    if [ "$policy" = "schedutil" ]
    then
      /usr/bin/batocera-settings-set system.cpu.governor "schedutil"
      exit 0
    elif [ "$policy" = "performance" ]
    then
      /usr/bin/batocera-settings-set system.cpu.governor "performance"
    fi
  done
}

case "$1" in
  start|restart|reload)

    # check if governor is set
    if ! governor="$(/usr/bin/batocera-settings-get system.cpu.governor)"
    then
      #save_governor
      exit 0
    fi

    # try to apply governor
    if ! echo $governor > /sys/devices/system/cpu/cpufreq/policy0/scaling_governor 2>/dev/null
    then
      #save_governor
      exit 0
    fi

    # apply governor to all remaining cpufreq policies
    for policy in /sys/devices/system/cpu/cpufreq/policy*
    do
      if { [ "$policy" != "/sys/devices/system/cpu/cpufreq/policy0" ] && [ -e "$policy/scaling_governor" ]; }
      then
        echo $governor > "$policy/scaling_governor"
      fi
    done

    ;;
  save)
    save_governor
    ;;
  list)
    cat /sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors
    ;;
  *)
esac
