// GLSL shader autogenerated by cg2glsl.py.
#if defined(VERTEX)
varying     vec2 VARpixel_no;
varying     vec2 VARc11;
varying     vec4 VARc12_22;
varying     vec4 VARc21_02;
varying     vec4 VARc20_01;
varying     vec4 VARc00_10;


struct tex_coord {
    vec4 VARc00_10;
    vec4 VARc20_01;
    vec4 VARc21_02;
    vec4 VARc12_22;
    vec2 VARc11;
    vec2 VARpixel_no;
};

struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};

vec4 _oPosition1;
tex_coord _coords1;
uniform mat4 MVPMatrix;
input_dummy _IN1;
vec4 _r0015;
attribute vec4 VertexCoord;
attribute vec4 COLOR;
varying vec4 COL0;
attribute vec4 TexCoord;

 

         mat4 transpose_(mat4 matrix)
         {
            mat4 ret;
            for (int i = 0; i != 4; i++)
               for (int j = 0; j != 4; j++)
                  ret[i][j] = matrix[j][i];

            return ret;
         }
         
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{
    mat4 MVPMatrix_ = transpose_(MVPMatrix);

    vec4 _oColor;
    float _dx;
    float _dy;
    vec2 _TMP5;
    vec2 _TMP6;
    vec2 _TMP7;
    vec2 _TMP8;
    vec2 _TMP9;
    vec2 _TMP10;
    vec2 _TMP11;
    vec2 _TMP12;
    tex_coord _TMP13;

    _r0015.x = dot(MVPMatrix_[0], VertexCoord);
    _r0015.y = dot(MVPMatrix_[1], VertexCoord);
    _r0015.z = dot(MVPMatrix_[2], VertexCoord);
    _r0015.w = dot(MVPMatrix_[3], VertexCoord);
    _oPosition1 = _r0015;
    _oColor = COLOR;
    _dx = 1.00000000E+000/TextureSize.x;
    _dy = 1.00000000E+000/TextureSize.y;
    _TMP11 = TexCoord.xy + vec2(-_dx, -_dy);
    _TMP12 = TexCoord.xy + vec2(0.00000000E+000, -_dy);
    _TMP13.VARc00_10 = vec4(_TMP11.x, _TMP11.y, _TMP12.x, _TMP12.y);
    _TMP9 = TexCoord.xy + vec2(_dx, -_dy);
    _TMP10 = TexCoord.xy + vec2(-_dx, 0.00000000E+000);
    _TMP13.VARc20_01 = vec4(_TMP9.x, _TMP9.y, _TMP10.x, _TMP10.y);
    _TMP7 = TexCoord.xy + vec2(_dx, 0.00000000E+000);
    _TMP8 = TexCoord.xy + vec2(-_dx, _dy);
    _TMP13.VARc21_02 = vec4(_TMP7.x, _TMP7.y, _TMP8.x, _TMP8.y);
    _TMP5 = TexCoord.xy + vec2(0.00000000E+000, _dy);
    _TMP6 = TexCoord.xy + vec2(_dx, _dy);
    _TMP13.VARc12_22 = vec4(_TMP5.x, _TMP5.y, _TMP6.x, _TMP6.y);
    _TMP13.VARpixel_no = TexCoord.xy*TextureSize;
    VARc00_10 = _TMP13.VARc00_10;
    VARc20_01 = _TMP13.VARc20_01;
    VARc21_02 = _TMP13.VARc21_02;
    VARc12_22 = _TMP13.VARc12_22;
    VARc11 = TexCoord.xy;
    VARpixel_no = _TMP13.VARpixel_no;
    gl_Position = _r0015;
    COL0 = COLOR;
} 
#elif defined(FRAGMENT)
#ifdef GL_ES
precision mediump float;
#endif
varying     vec2 VARpixel_no;
varying     vec2 VARc11;
varying     vec4 VARc12_22;
varying     vec4 VARc21_02;
varying     vec4 VARc20_01;
varying     vec4 VARc00_10;


struct tex_coord {
    vec4 VARc00_10;
    vec4 VARc20_01;
    vec4 VARc21_02;
    vec4 VARc12_22;
    vec2 VARc11;
    vec2 VARpixel_no;
};

struct input_dummy {
    vec2 _video_size;
    vec2 _texture_size;
    vec2 _output_dummy_size;
};

vec4 _ret_0;
vec3 _TMP16;
vec4 _TMP15;
vec2 _TMP17;
float _TMP20;
float _TMP21;
vec3 _TMP14;
vec4 _TMP13;
vec3 _TMP12;
vec4 _TMP11;
vec3 _TMP10;
vec4 _TMP9;
vec3 _TMP8;
vec4 _TMP7;
vec3 _TMP6;
vec4 _TMP5;
vec3 _TMP4;
vec4 _TMP3;
vec3 _TMP2;
vec4 _TMP1;
vec4 _TMP0;
tex_coord _co1;
uniform sampler2D Texture;
float _TMP34;
vec2 _delta0035;
float _TMP42;
float _bright0043;
float _TMP48;
float _x0049;
float _TMP58;
vec2 _delta0059;
float _TMP66;
float _bright0067;
float _TMP72;
float _x0073;
float _TMP82;
vec2 _delta0083;
float _TMP90;
float _bright0091;
float _TMP96;
float _x0097;
float _TMP106;
vec2 _delta0107;
float _TMP114;
float _bright0115;
float _TMP120;
float _x0121;
float _TMP130;
vec2 _delta0131;
float _TMP138;
float _bright0139;
float _TMP144;
float _x0145;
float _TMP154;
vec2 _delta0155;
float _TMP162;
float _bright0163;
float _TMP168;
float _x0169;
float _TMP178;
vec2 _delta0179;
float _TMP186;
float _bright0187;
float _TMP192;
float _x0193;
float _TMP202;
vec2 _delta0203;
float _TMP210;
float _bright0211;
float _TMP216;
float _x0217;
float _TMP226;
vec2 _delta0227;
float _TMP234;
float _bright0235;
float _TMP240;
float _x0241;
vec3 _a0245;

 
uniform int FrameDirection;
uniform int FrameCount;
#ifdef GL_ES
uniform mediump vec2 OutputSize;
uniform mediump vec2 TextureSize;
uniform mediump vec2 InputSize;
#else
uniform vec2 OutputSize;
uniform vec2 TextureSize;
uniform vec2 InputSize;
#endif
void main()
{

    vec3 _mid_color;
    vec3 _color2;
    vec3 _out_color;

    _TMP0 = texture2D(Texture, VARc11);
    _TMP17 = fract(VARpixel_no);
    _delta0035 = _TMP17 - vec2( 5.00000000E-001, 5.00000000E-001);
    _TMP20 = dot(_delta0035, _delta0035);
    _TMP21 = inversesqrt(_TMP20);
    _TMP34 = 1.00000000E+000/_TMP21;
    _bright0043 = dot(_TMP0.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP42 = 1.04999995E+000 + _bright0043*-9.99999642E-002;
    _x0049 = -2.40000010E+000*_TMP34*_TMP42;
    _TMP48 = pow(2.71828198E+000, _x0049);
    _mid_color = _TMP0.xyz*_TMP48;
    _TMP1 = texture2D(Texture, VARc00_10.xy);
    _TMP17 = fract(VARpixel_no);
    _delta0059 = _TMP17 - vec2( -5.00000000E-001, -5.00000000E-001);
    _TMP20 = dot(_delta0059, _delta0059);
    _TMP21 = inversesqrt(_TMP20);
    _TMP58 = 1.00000000E+000/_TMP21;
    _bright0067 = dot(_TMP1.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP66 = 1.04999995E+000 + _bright0067*-9.99999642E-002;
    _x0073 = -2.40000010E+000*_TMP58*_TMP66;
    _TMP72 = pow(2.71828198E+000, _x0073);
    _TMP2 = _TMP1.xyz*_TMP72;
    _TMP3 = texture2D(Texture, VARc00_10.zw);
    _TMP17 = fract(VARpixel_no);
    _delta0083 = _TMP17 - vec2( 5.00000000E-001, -5.00000000E-001);
    _TMP20 = dot(_delta0083, _delta0083);
    _TMP21 = inversesqrt(_TMP20);
    _TMP82 = 1.00000000E+000/_TMP21;
    _bright0091 = dot(_TMP3.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP90 = 1.04999995E+000 + _bright0091*-9.99999642E-002;
    _x0097 = -2.40000010E+000*_TMP82*_TMP90;
    _TMP96 = pow(2.71828198E+000, _x0097);
    _TMP4 = _TMP3.xyz*_TMP96;
    _color2 = _TMP2 + _TMP4;
    _TMP5 = texture2D(Texture, VARc20_01.xy);
    _TMP17 = fract(VARpixel_no);
    _delta0107 = _TMP17 - vec2( 1.50000000E+000, -5.00000000E-001);
    _TMP20 = dot(_delta0107, _delta0107);
    _TMP21 = inversesqrt(_TMP20);
    _TMP106 = 1.00000000E+000/_TMP21;
    _bright0115 = dot(_TMP5.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP114 = 1.04999995E+000 + _bright0115*-9.99999642E-002;
    _x0121 = -2.40000010E+000*_TMP106*_TMP114;
    _TMP120 = pow(2.71828198E+000, _x0121);
    _TMP6 = _TMP5.xyz*_TMP120;
    _color2 = _color2 + _TMP6;
    _TMP7 = texture2D(Texture, VARc20_01.zw);
    _TMP17 = fract(VARpixel_no);
    _delta0131 = _TMP17 - vec2( -5.00000000E-001, 5.00000000E-001);
    _TMP20 = dot(_delta0131, _delta0131);
    _TMP21 = inversesqrt(_TMP20);
    _TMP130 = 1.00000000E+000/_TMP21;
    _bright0139 = dot(_TMP7.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP138 = 1.04999995E+000 + _bright0139*-9.99999642E-002;
    _x0145 = -2.40000010E+000*_TMP130*_TMP138;
    _TMP144 = pow(2.71828198E+000, _x0145);
    _TMP8 = _TMP7.xyz*_TMP144;
    _color2 = _color2 + _TMP8;
    _color2 = _color2 + _mid_color;
    _TMP9 = texture2D(Texture, VARc21_02.xy);
    _TMP17 = fract(VARpixel_no);
    _delta0155 = _TMP17 - vec2( 1.50000000E+000, 5.00000000E-001);
    _TMP20 = dot(_delta0155, _delta0155);
    _TMP21 = inversesqrt(_TMP20);
    _TMP154 = 1.00000000E+000/_TMP21;
    _bright0163 = dot(_TMP9.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP162 = 1.04999995E+000 + _bright0163*-9.99999642E-002;
    _x0169 = -2.40000010E+000*_TMP154*_TMP162;
    _TMP168 = pow(2.71828198E+000, _x0169);
    _TMP10 = _TMP9.xyz*_TMP168;
    _color2 = _color2 + _TMP10;
    _TMP11 = texture2D(Texture, VARc21_02.zw);
    _TMP17 = fract(VARpixel_no);
    _delta0179 = _TMP17 - vec2( -5.00000000E-001, 1.50000000E+000);
    _TMP20 = dot(_delta0179, _delta0179);
    _TMP21 = inversesqrt(_TMP20);
    _TMP178 = 1.00000000E+000/_TMP21;
    _bright0187 = dot(_TMP11.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP186 = 1.04999995E+000 + _bright0187*-9.99999642E-002;
    _x0193 = -2.40000010E+000*_TMP178*_TMP186;
    _TMP192 = pow(2.71828198E+000, _x0193);
    _TMP12 = _TMP11.xyz*_TMP192;
    _color2 = _color2 + _TMP12;
    _TMP13 = texture2D(Texture, VARc12_22.xy);
    _TMP17 = fract(VARpixel_no);
    _delta0203 = _TMP17 - vec2( 5.00000000E-001, 1.50000000E+000);
    _TMP20 = dot(_delta0203, _delta0203);
    _TMP21 = inversesqrt(_TMP20);
    _TMP202 = 1.00000000E+000/_TMP21;
    _bright0211 = dot(_TMP13.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP210 = 1.04999995E+000 + _bright0211*-9.99999642E-002;
    _x0217 = -2.40000010E+000*_TMP202*_TMP210;
    _TMP216 = pow(2.71828198E+000, _x0217);
    _TMP14 = _TMP13.xyz*_TMP216;
    _color2 = _color2 + _TMP14;
    _TMP15 = texture2D(Texture, VARc12_22.zw);
    _TMP17 = fract(VARpixel_no);
    _delta0227 = _TMP17 - vec2( 1.50000000E+000, 1.50000000E+000);
    _TMP20 = dot(_delta0227, _delta0227);
    _TMP21 = inversesqrt(_TMP20);
    _TMP226 = 1.00000000E+000/_TMP21;
    _bright0235 = dot(_TMP15.xyz, vec3( 3.00000012E-001, 5.89999974E-001, 1.09999999E-001));
    _TMP234 = 1.04999995E+000 + _bright0235*-9.99999642E-002;
    _x0241 = -2.40000010E+000*_TMP226*_TMP234;
    _TMP240 = pow(2.71828198E+000, _x0241);
    _TMP16 = _TMP15.xyz*_TMP240;
    _color2 = _color2 + _TMP16;
    _a0245 = 1.20000005E+000*_mid_color;
    _out_color = _a0245 + 6.49999976E-001*(_color2 - _a0245);
    _ret_0 = vec4(_out_color.x, _out_color.y, _out_color.z, 1.00000000E+000);
    gl_FragColor = _ret_0;
    return;
} 
#endif
