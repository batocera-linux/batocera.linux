diff --git a/src/video/x11/SDL_x11modes.c b/src/video/x11/SDL_x11modes.c
index f97908e..a58c1a4 100644
--- a/src/video/x11/SDL_x11modes.c
+++ b/src/video/x11/SDL_x11modes.c
@@ -467,6 +467,9 @@ static int X11_InitModes_XRandR(_THIS)
     int looking_for_primary;
     int output;
     int screen;
+    char* sdl_screen_env;
+
+    sdl_screen_env = SDL_getenv("SDL_SCREEN");
 
     if (!X11_XRRQueryExtension(dpy, &data->xrandr_event_base, &xrandr_error_base)) {
         return SDL_SetError("XRRQueryExtension failed");
@@ -475,10 +478,12 @@ static int X11_InitModes_XRandR(_THIS)
     for (looking_for_primary = 1; looking_for_primary >= 0; looking_for_primary--) {
         for (screen = 0; screen < screencount; screen++) {
 
+	  if (sdl_screen_env == NULL) {
             /* we want the primary output first, and then skipped later. */
             if (looking_for_primary && (screen != default_screen)) {
                 continue;
             }
+	  }
 
             res = X11_XRRGetScreenResourcesCurrent(dpy, RootWindow(dpy, screen));
             if (res == NULL || res->noutput == 0) {
@@ -493,11 +498,23 @@ static int X11_InitModes_XRandR(_THIS)
             }
 
             for (output = 0; output < res->noutput; output++) {
+	      if (sdl_screen_env == NULL) {
                 /* The primary output _should_ always be sorted first, but just in case... */
                 if ((looking_for_primary && (res->outputs[output] != primary)) ||
                     (!looking_for_primary && (screen == default_screen) && (res->outputs[output] == primary))) {
                     continue;
                 }
+	      } else {
+		if (looking_for_primary) {
+		  XRROutputInfo *output_info;
+		  output_info = X11_XRRGetOutputInfo(dpy, res, res->outputs[output]);
+		  if(output_info != NULL) {
+		    if(strcmp(output_info->name, sdl_screen_env) != 0) {
+		      continue;
+		    }
+		  }
+		}
+	      }
                 if (X11_AddXRandRDisplay(_this, dpy, screen, res->outputs[output], res, SDL_FALSE) == -1) {
                     break;
                 }
