diff --git a/xbmc-xrandr.c b/xbmc-xrandr.c
index 6b916f0..60bed1e 100644
--- a/xbmc-xrandr.c
+++ b/xbmc-xrandr.c
@@ -3061,7 +3061,7 @@ int main(int argc, char** argv)
       Bool* mode_shown;
       //	    Rotation	    rotations = output_rotations (output);
 
-      printf("  <output name=\"%s\" connected=\"%s\"", output_info->name,
+      printf("  <output name=\"%s\" primary=\"%s\" connected=\"%s\"", output_info->name, output->primary ? "true":"false",
              connection[output_info->connection]);
       if (mode)
       {
diff --git a/xbmc/windowing/X11/XRandR.cpp b/xbmc/windowing/X11/XRandR.cpp
index ab20da3..78227fe 100644
--- a/xbmc/windowing/X11/XRandR.cpp
+++ b/xbmc/windowing/X11/XRandR.cpp
@@ -95,9 +95,16 @@ bool CXRandR::Query(bool force, int screennum, bool ignoreoff)
     return false;
   }
 
+  for(int i=1; i>=0; i--) { // 2 loops: 1:primary 2:others
+
   for (TiXmlElement* output = pRootElement->FirstChildElement("output"); output; output = output->NextSiblingElement("output"))
   {
     XOutput xoutput;
+
+    // in the first loop, keep only primary ; in the 2nd, exclude primary
+    if(i == 1 && StringUtils::CompareNoCase(output->Attribute("primary"), "true") != 0) continue;
+    if(i == 0 && StringUtils::CompareNoCase(output->Attribute("primary"), "true") == 0) continue;
+
     xoutput.name = output->Attribute("name");
     StringUtils::Trim(xoutput.name);
     xoutput.isConnected = (StringUtils::CompareNoCase(output->Attribute("connected"), "true") == 0);
@@ -142,6 +149,9 @@ bool CXRandR::Query(bool force, int screennum, bool ignoreoff)
       CLog::Log(LOGWARNING, "CXRandR::Query - output {} has no current mode, assuming disconnected",
                 xoutput.name);
   }
+
+  }
+
   return m_outputs.size() > 0;
 }
 
