From 9afb0cfd47bf0d388869d3f55baa0d1a02ec2c19 Mon Sep 17 00:00:00 2001
From: Max Kellermann <max.kellermann@gmail.com>
Date: Mon, 24 Apr 2017 14:38:08 +0200
Subject: [PATCH 46/62] windowing/wayland/Display: inline trivial methods

Signed-off-by: memeka <mihailescu2m@gmail.com>
---
 xbmc/windowing/wayland/Display.cpp | 32 --------------------------------
 xbmc/windowing/wayland/Display.h   | 29 +++++++++++++++++++++++++----
 2 files changed, 25 insertions(+), 36 deletions(-)

diff --git a/xbmc/windowing/wayland/Display.cpp b/xbmc/windowing/wayland/Display.cpp
index e4a9456..8443ac4 100644
--- a/xbmc/windowing/wayland/Display.cpp
+++ b/xbmc/windowing/wayland/Display.cpp
@@ -23,19 +23,11 @@
 
 #include <cstdlib>
 
-#include <wayland-client.h>
-
 #include "Display.h"
 
 namespace xw = xbmc::wayland;
 
 void
-xw::WaylandDisplayListener::SetHandler(const Handler &handler)
-{
-  m_handler = handler;
-}
-
-void
 xw::WaylandDisplayListener::DisplayAvailable(Display &display)
 {
   if (m_handler)
@@ -76,27 +68,3 @@ xw::Display::~Display()
   wl_display_flush(m_display);
   wl_display_disconnect(m_display);
 }
-
-struct wl_display *
-xw::Display::GetWlDisplay()
-{
-  return m_display;
-}
-
-EGLNativeDisplayType *
-xw::Display::GetEGLNativeDisplay()
-{
-  return &m_display;
-}
-
-/* Create a sync callback object. This can be wrapped in an
- * xbmc::wayland::Callback object to call an arbitrary function
- * as soon as the display has finished processing all commands.
- * 
- * This does not block until a synchronization is complete -
- * consider using a function like WaitForSynchronize to do that */
-struct wl_callback *
-xw::Display::Sync()
-{
-  return wl_display_sync(m_display);
-}
diff --git a/xbmc/windowing/wayland/Display.h b/xbmc/windowing/wayland/Display.h
index bc403a6..a66a0f1 100644
--- a/xbmc/windowing/wayland/Display.h
+++ b/xbmc/windowing/wayland/Display.h
@@ -19,6 +19,9 @@
  *  <http://www.gnu.org/licenses/>.
  *
  */
+
+#include <wayland-client.h>
+
 #include <functional>
 #include <memory>
 
@@ -41,9 +44,24 @@ class Display
     Display(const Display &) = delete;
     Display &operator=(const Display &) = delete;
 
-    struct wl_display * GetWlDisplay();
-    EGLNativeDisplayType* GetEGLNativeDisplay();
-    struct wl_callback * Sync();
+    struct wl_display * GetWlDisplay() {
+      return m_display;
+    }
+
+    EGLNativeDisplayType* GetEGLNativeDisplay() {
+      return &m_display;
+    }
+
+    /* Create a sync callback object. This can be wrapped in an
+     * xbmc::wayland::Callback object to call an arbitrary function
+     * as soon as the display has finished processing all commands.
+     *
+     * This does not block until a synchronization is complete -
+     * consider using a function like WaitForSynchronize to do that
+     */
+    struct wl_callback * Sync() {
+      return wl_display_sync(m_display);
+    }
 
   private:
 
@@ -59,7 +77,10 @@ public:
 
   typedef std::function<void(Display &)> Handler;
   
-  void SetHandler(const Handler &);
+  void SetHandler(const Handler &handler) {
+    m_handler = handler;
+  }
+
   void DisplayAvailable(Display &);
 
   static WaylandDisplayListener & GetInstance();
-- 
2.7.4

