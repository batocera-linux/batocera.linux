diff -u -r a/esp_conf.h b/esp_conf.h
--- a/esp_conf.h	2021-06-27 04:39:25.000000000 +0200
+++ b/esp_conf.h	2021-10-21 14:08:45.493842165 +0200
@@ -1,6 +1,6 @@
 #ifndef _ESP_CONF_H_
 #define _ESP_CONF_H_
 
-#define INIT_DATA_CONF_BUF "crystal_26M_en=1;test_xtal=0;sdio_configure=2;bt_configure=0;bt_protocol=0;dual_ant_configure=0;test_uart_configure=2;share_xtal=0;gpio_wake=0;no_auto_sleep=0;ext_rst=0;wakeup_gpio=12;ate_test=0;speed_suspend=0;$"
+#define INIT_DATA_CONF_BUF "crystal_26M_en=1;test_xtal=0;sdio_configure=2;bt_configure=0;bt_protocol=0;dual_ant_configure=0;test_uart_configure=0;share_xtal=0;gpio_wake=0;no_auto_sleep=1;ext_rst=0;wakeup_gpio=12;ate_test=0;speed_suspend=0;$"
 
 #endif /*_ESP_CONF_H_ */
diff -u -r a/Makefile b/Makefile
--- a/Makefile	2021-06-27 04:39:25.000000000 +0200
+++ b/Makefile	2021-10-21 14:08:45.493842165 +0200
@@ -64,7 +62,7 @@
     -DKERNEL_IV_WAR -DRX_SENDUP_SYNC -DDEBUG_FS \
     -DSIF_DSR_WAR -DHAS_INIT_DATA -DHAS_FW 
 
-EXTRA_CFLAGS += -DP2P_CONCURRENT -DESP_USE_SDIO
+EXTRA_CFLAGS += -DESP_USE_SDIO
 
 ifdef ANDROID
 EXTRA_CFLAGS += -DANDROID
diff -u -r a/sdio_stub.c b/sdio_stub.c
--- a/sdio_stub.c	2021-06-27 04:39:25.000000000 +0200
+++ b/sdio_stub.c	2021-10-21 14:08:45.497842236 +0200
@@ -11,7 +11,8 @@
 //#include <mach/iomux.h>
 
 /* reset GPIO parameter defaults to GPIO 0 (ID_SD) on the Raspberry Pi */
-static int esp_reset_gpio = 0;
+/* default reset port of OGA hw rev 1.1 : GPIO3_B1 (105) */
+static int esp_reset_gpio = 105;
 module_param(esp_reset_gpio, int, 0);
 MODULE_PARM_DESC(esp_reset_gpio, "ESP8089 CH_PD reset GPIO number");
 
@@ -35,11 +36,10 @@
 
 void sif_platform_reset_target(void)
 {
+	/* set output high by default */
 	printk("ESP8089 reset via GPIO %d\n", esp_reset_gpio);
 	gpio_request(esp_reset_gpio,"esp_reset");
-	gpio_direction_output(esp_reset_gpio,0);
-	msleep(200);
-	gpio_direction_input(esp_reset_gpio);
+	gpio_direction_output(esp_reset_gpio, 1);
 	gpio_free(esp_reset_gpio);
 }
 
diff --git a/sdio_sif_esp.c b/sdio_sif_esp.c
index 780f7bc..81ecba3 100755
--- a/sdio_sif_esp.c
+++ b/sdio_sif_esp.c
@@ -50,6 +50,25 @@ static void  /*__exit*/ esp_sdio_exit(void);
 //unsigned int esp_msg_level = 0;
 unsigned int esp_msg_level = ESP_DBG_ERROR | ESP_SHOW;
 
+/* HdG: Note:
+ * 1) MMC_HAS_FORCE_DETECT_CHANGE is a hack which is set by my sunxi-wip
+ *    tree. FIXME replace with a version check once mmc_force_detect_change()
+ *    is added to the mainline kernel.
+ * 2) This version does NOT implement keep_power, the dts must mark the
+ *    regulators as regulator-always-on and not use mmc-pwrseq for this stub
+ *    to work.
+ */
+#ifndef MMC_HAS_FORCE_DETECT_CHANGE
+void mmc_force_detect_change(struct mmc_host *host, unsigned long delay,
+			     bool keep_power)
+{
+	host->caps &= ~MMC_CAP_NONREMOVABLE;
+	host->caps |= MMC_CAP_NEEDS_POLL;
+	mmc_detect_change(host, delay);
+}
+#endif
+
+
 static struct semaphore esp_powerup_sem;
 
 static enum esp_sdio_state sif_sdio_state;
@@ -500,6 +519,7 @@ static int esp_sdio_probe(struct sdio_func *func, const struct sdio_device_id *i
         int err = 0;
         struct esp_pub *epub;
         struct esp_sdio_ctrl *sctrl;
+		struct mmc_host *host = func->card->host;
 
         esp_dbg(ESP_DBG_TRACE,
                         "sdio_func_num: 0x%X, vendor id: 0x%X, dev id: 0x%X, block size: 0x%X/0x%X\n",
@@ -609,6 +629,11 @@ static int esp_sdio_probe(struct sdio_func *func, const struct sdio_device_id *i
 	if(sif_sdio_state == ESP_SDIO_STATE_FIRST_INIT){
 		esp_dbg(ESP_DBG_ERROR, "first normal exit\n");
 		sif_sdio_state = ESP_SDIO_STATE_FIRST_NORMAL_EXIT;
+
+		/* Add force rescan */
+		/* Rescan the esp8089 after loading the initial firmware */
+		mmc_force_detect_change(host, msecs_to_jiffies(100), true);
+
 		up(&esp_powerup_sem);
 	}
 
