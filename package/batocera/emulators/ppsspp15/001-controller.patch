diff --git a/SDL/SDLJoystick.cpp b/SDL/SDLJoystick.cpp
index 36576d0..59b9c07 100644
--- a/SDL/SDLJoystick.cpp
+++ b/SDL/SDLJoystick.cpp
@@ -18,7 +18,7 @@ SDLJoystick::SDLJoystick(bool init_SDL ) : registeredAsEventHandler(false) {
 		SDL_SetHint(SDL_HINT_JOYSTICK_ALLOW_BACKGROUND_EVENTS, "1");
 		SDL_Init(SDL_INIT_JOYSTICK | SDL_INIT_VIDEO | SDL_INIT_GAMECONTROLLER);
 	}
-	
+
 	char* dbEnvPath = getenv("PPSSPP_GAME_CONTROLLER_DB_PATH");
 	if (dbEnvPath != NULL) {
 		if (!File::Exists(dbEnvPath)) {
@@ -34,15 +34,15 @@ SDLJoystick::SDLJoystick(bool init_SDL ) : registeredAsEventHandler(false) {
 			}
 		}
 	}
-		
-	auto dbPath = File::GetExeDirectory() + "assets/gamecontrollerdb.txt";
+
+	auto dbPath = File::GetExeDirectory() + "/userdata/system/configs/ppsspp/gamecontrollerdb.txt";
 	cout << "loading control pad mappings from " << dbPath << ": ";
 
 	if (SDL_GameControllerAddMappingsFromFile(dbPath.c_str()) == -1) {
 		cout << "FAILED! Please place gamecontrollerdb.txt in your assets directory." << endl;
 		return;
 	}
-	
+
 	cout << "SUCCESS!" << endl;
 	setUpControllers();
 }
@@ -166,7 +166,7 @@ void SDLJoystick::ProcessInput(SDL_Event &event){
 		NativeAxis(axis);
 		break;
 	case SDL_CONTROLLERDEVICEREMOVED:
-		// for removal events, "which" is the instance ID for SDL_CONTROLLERDEVICEREMOVED		
+		// for removal events, "which" is the instance ID for SDL_CONTROLLERDEVICEREMOVED
 		for (auto it = controllers.begin(); it != controllers.end(); ++it) {
 			if (SDL_JoystickInstanceID(SDL_GameControllerGetJoystick(*it)) == event.cdevice.which) {
 				SDL_GameControllerClose(*it);
