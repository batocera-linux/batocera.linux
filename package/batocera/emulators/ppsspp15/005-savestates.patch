diff --git a/Core/SaveState.cpp b/Core/SaveState.cpp
index d39b0da..301f835 100644
--- a/Core/SaveState.cpp
+++ b/Core/SaveState.cpp
@@ -390,13 +390,8 @@ namespace SaveState
 			}
 		}
 
-		std::string temp = StringFromFormat("ms0:/PSP/PPSSPP_STATE/%s_%i.%s", fullDiscId.c_str(), slot, extension);
-		std::string hostPath;
-		if (pspFileSystem.GetHostPath(temp, hostPath)) {
-			return hostPath;
-		} else {
-			return "";
-		}
+		std::string filename = StringFromFormat("%s_%d.%s", fullDiscId.c_str(), slot, extension);
+		return GetSysDirectory(DIRECTORY_SAVESTATE) + filename;
 	}
 
 	int GetCurrentSlot()
@@ -693,10 +688,7 @@ namespace SaveState
 	}
 
 	void Init()
-	{
-		// Make sure there's a directory for save slots
-		pspFileSystem.MkDir("ms0:/PSP/PPSSPP_STATE");
-
+	{		
 		lock_guard guard(mutex);
 		rewindStates.Clear();
 
diff --git a/Core/System.cpp b/Core/System.cpp
index 0397649..01921ef 100644
--- a/Core/System.cpp
+++ b/Core/System.cpp
@@ -583,7 +583,7 @@ std::string GetSysDirectory(PSPDirectories directoryType) {
 	case DIRECTORY_DUMP:
 		return g_Config.memStickDirectory + "PSP/SYSTEM/DUMP/";
 	case DIRECTORY_SAVESTATE:
-		return g_Config.memStickDirectory + "PSP/PPSSPP_STATE/";
+		return "/userdata/saves/psp/";
 	case DIRECTORY_CACHE:
 		return g_Config.memStickDirectory + "PSP/SYSTEM/CACHE/";
 	case DIRECTORY_TEXTURES:
