diff --git a/core/linux-dist/evdev.cpp b/core/linux-dist/evdev.cpp
index 6eb6062..b89d3a7 100644
--- a/core/linux-dist/evdev.cpp
+++ b/core/linux-dist/evdev.cpp
@@ -501,6 +501,8 @@
 		}
 	}
 
+	void dc_term();
+
 	bool input_evdev_handle(u32 port)
 	{
 		EvdevController* controller = &evdev_controllers[port];
@@ -512,12 +514,14 @@
 		}
 
 		input_event ie;
+		static int batocera_hotkey = 0;
 
 		while(read(controller->fd, &ie, sizeof(ie)) == sizeof(ie))
 		{
 			switch(ie.type)
 			{
 				case EV_KEY:
+				  if(batocera_hotkey == 0) {
 					if (ie.code == controller->mapping->Btn_A) {
 						SET_FLAG(kcode[port], DC_BTN_A, ie.value);
 					} else if (ie.code == controller->mapping->Btn_B) {
@@ -535,7 +539,7 @@
 					} else if (ie.code == controller->mapping->Btn_Start) {
 						SET_FLAG(kcode[port], DC_BTN_START, ie.value);
 					} else if (ie.code == controller->mapping->Btn_Escape) {
-						dc_stop();
+						batocera_hotkey = ie.value;
 					} else if (ie.code == controller->mapping->Btn_DPad_Left) {
 						SET_FLAG(kcode[port], DC_DPAD_LEFT, ie.value);
 					} else if (ie.code == controller->mapping->Btn_DPad_Right) {
@@ -557,6 +561,14 @@
 					} else if (ie.code == controller->mapping->Btn_Trigger_Right) {
 						rt[port] = (ie.value ? 255 : 0);
 					}
+				     	 } else {
+					if (ie.code == controller->mapping->Btn_Escape) {
+					   batocera_hotkey = ie.value;
+					} else if (ie.code == controller->mapping->Btn_Start) {
+					   dc_term();
+					   die("death by escape key");
+					}
+				     	 }
 					break;
 				case EV_ABS:
 					if (ie.code == controller->mapping->Axis_DPad_X)
