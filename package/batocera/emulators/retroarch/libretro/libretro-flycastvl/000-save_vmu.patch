diff --git a/core/libretro/libretro.cpp b/core/libretro/libretro.cpp
index 35e8516..05308c1 100644
--- a/core/libretro/libretro.cpp
+++ b/core/libretro/libretro.cpp
@@ -103,7 +103,7 @@ char save_dir[PATH_MAX];
 char eeprom_file[PATH_MAX];
 char nvmem_file[PATH_MAX];
 char nvmem_file2[PATH_MAX];		// AtomisWave
-bool boot_to_bios;
+bool boot_to_bios=true;
 
 static bool devices_need_refresh = false;
 static int device_type[4] = {-1,-1,-1,-1};
@@ -1848,8 +1848,8 @@ bool retro_load_game(const struct retro_game_info *game)
    if (!(environ_cb(RETRO_ENVIRONMENT_GET_SYSTEM_DIRECTORY, &dir) && dir))
       dir = game_dir;
 
-   snprintf(game_dir, sizeof(game_dir), "%s%cdc%c", dir, slash, slash);
-   snprintf(game_dir_no_slash, sizeof(game_dir_no_slash), "%s%cdc", dir, slash);
+   snprintf(game_dir, sizeof(game_dir), "%s", dir);
+   snprintf(game_dir_no_slash, sizeof(game_dir_no_slash), "%s", dir);
 
    // Per-content VMU additions START
    // > Get save directory
@@ -1954,7 +1954,7 @@ bool retro_load_game(const struct retro_game_info *game)
    {
       char data_dir[1024];
 
-      snprintf(data_dir, sizeof(data_dir), "%s%s", game_dir, "data");
+      snprintf(data_dir, sizeof(data_dir), "%s", game_dir);
 
       INFO_LOG(COMMON, "Creating dir: %s", data_dir);
       struct stat buf;
diff --git a/core/nullDC.cpp b/core/nullDC.cpp
index 8560b24..afd3a44 100644
--- a/core/nullDC.cpp
+++ b/core/nullDC.cpp
@@ -483,7 +483,7 @@ void dc_run()
 
 void dc_term()
 {
-	SaveRomFiles(get_writable_data_path(""));
+	SaveRomFiles(get_writable_data_save(""));
 	sh4_cpu.Term();
 	naomi_cart_Close();
 	plugins_Term();
diff --git a/core/stdclass.cpp b/core/stdclass.cpp
index 4174908..c340f17 100644
--- a/core/stdclass.cpp
+++ b/core/stdclass.cpp
@@ -42,6 +42,17 @@ std::string get_writable_data_path(const std::string& filename)
          + filename);
 }
 
+std::string get_writable_data_save(const std::string& filename)
+{
+   return std::string("/userdata/saves/dreamcast/" +
+#ifdef _WIN32
+         std::string("\\")
+#else
+         std::string("/")
+#endif
+         + filename);
+}
+
 std::string get_writable_vmu_path(const char *logical_port)
 {
    extern char vmu_dir_no_slash[PATH_MAX];
@@ -64,6 +75,6 @@ std::string get_writable_vmu_path(const char *logical_port)
    else
    {
       sprintf(filename, "vmu_save_%s.bin", logical_port);
-      return get_writable_data_path(filename);
+      return std::string("/userdata/saves/dreamcast/") + filename;
    }
 }
diff --git a/core/stdclass.h b/core/stdclass.h
index 72b30af..0e079db 100644
--- a/core/stdclass.h
+++ b/core/stdclass.h
@@ -244,6 +244,7 @@ void add_system_data_dir(const std::string& dir);
 
 //subpath format: /data/fsca-table.bit
 std::string get_writable_data_path(const std::string& filename);
+std::string get_writable_data_save(const std::string& filename);
 std::string get_writable_vmu_path(const char *logical_port);
 
 bool mem_region_lock(void *start, std::size_t len);
