From 45c559fb9a9743f27b762b1aabeee4d5f0def3f2 Mon Sep 17 00:00:00 2001
From: Elad Ashkenazi <elad3356p@gmail.com>
Date: Sat, 3 Jun 2023 17:36:55 +0300
Subject: [PATCH 1/6] Update sys_mutex.h

---
 rpcs3/Emu/Cell/lv2/sys_mutex.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/rpcs3/Emu/Cell/lv2/sys_mutex.h b/rpcs3/Emu/Cell/lv2/sys_mutex.h
index 75f43514e61..38af7739ea5 100644
--- a/rpcs3/Emu/Cell/lv2/sys_mutex.h
+++ b/rpcs3/Emu/Cell/lv2/sys_mutex.h
@@ -171,7 +171,7 @@ struct lv2_mutex final : lv2_obj
 			{
 				res = schedule<T>(data.sq, protocol, false);
 
-				if (sq == data.sq)
+				if (sq == res)
 				{
 					atomic_storage<u32>::release(control.raw().owner, res->id);
 					return false;

From e77e23e079ac856172db089d5f458d333a7a7e8d Mon Sep 17 00:00:00 2001
From: Elad Ashkenazi <elad3356p@gmail.com>
Date: Sat, 3 Jun 2023 17:40:43 +0300
Subject: [PATCH 2/6] Update sys_lwmutex.h

---
 rpcs3/Emu/Cell/lv2/sys_lwmutex.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/rpcs3/Emu/Cell/lv2/sys_lwmutex.h b/rpcs3/Emu/Cell/lv2/sys_lwmutex.h
index 73f87965e39..675b4f345bf 100644
--- a/rpcs3/Emu/Cell/lv2/sys_lwmutex.h
+++ b/rpcs3/Emu/Cell/lv2/sys_lwmutex.h
@@ -167,7 +167,7 @@ struct lv2_lwmutex final : lv2_obj
 			{
 				res = schedule<T>(data.sq, protocol, false);
 
-				if (sq == data.sq)
+				if (sq == res)
 				{
 					return false;
 				}

From 52b66d382f60c9601365abfc1ee2d9caf3550066 Mon Sep 17 00:00:00 2001
From: Elad Ashkenazi <elad3356p@gmail.com>
Date: Sat, 3 Jun 2023 18:29:20 +0300
Subject: [PATCH 3/6] Update sys_lwmutex.h

---
 rpcs3/Emu/Cell/lv2/sys_lwmutex.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/rpcs3/Emu/Cell/lv2/sys_lwmutex.h b/rpcs3/Emu/Cell/lv2/sys_lwmutex.h
index 675b4f345bf..73f87965e39 100644
--- a/rpcs3/Emu/Cell/lv2/sys_lwmutex.h
+++ b/rpcs3/Emu/Cell/lv2/sys_lwmutex.h
@@ -167,7 +167,7 @@ struct lv2_lwmutex final : lv2_obj
 			{
 				res = schedule<T>(data.sq, protocol, false);
 
-				if (sq == res)
+				if (sq == data.sq)
 				{
 					return false;
 				}

From 6d5897a1abebf04fab8961414d9c60af7d86b2ed Mon Sep 17 00:00:00 2001
From: Elad Ashkenazi <elad3356p@gmail.com>
Date: Sat, 3 Jun 2023 18:30:18 +0300
Subject: [PATCH 4/6] Update sys_mutex.h

---
 rpcs3/Emu/Cell/lv2/sys_mutex.h | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/rpcs3/Emu/Cell/lv2/sys_mutex.h b/rpcs3/Emu/Cell/lv2/sys_mutex.h
index 38af7739ea5..75f43514e61 100644
--- a/rpcs3/Emu/Cell/lv2/sys_mutex.h
+++ b/rpcs3/Emu/Cell/lv2/sys_mutex.h
@@ -171,7 +171,7 @@ struct lv2_mutex final : lv2_obj
 			{
 				res = schedule<T>(data.sq, protocol, false);
 
-				if (sq == res)
+				if (sq == data.sq)
 				{
 					atomic_storage<u32>::release(control.raw().owner, res->id);
 					return false;

From 8b4227c8b00829fa1431eb2d1b5158407c11bb48 Mon Sep 17 00:00:00 2001
From: Elad Ashkenazi <elad3356p@gmail.com>
Date: Sat, 3 Jun 2023 18:32:02 +0300
Subject: [PATCH 5/6] Update sys_timer.cpp

---
 rpcs3/Emu/Cell/lv2/sys_timer.cpp | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/rpcs3/Emu/Cell/lv2/sys_timer.cpp b/rpcs3/Emu/Cell/lv2/sys_timer.cpp
index 68d29ea82c4..23c94ec290f 100644
--- a/rpcs3/Emu/Cell/lv2/sys_timer.cpp
+++ b/rpcs3/Emu/Cell/lv2/sys_timer.cpp
@@ -95,7 +95,7 @@ u64 lv2_timer::check_unlocked(u64 _now) noexcept
 		// Set next expiration time and check again
 		const u64 expire0 = utils::add_saturate<u64>(next, period);
 		expire.release(expire0);
-		return expire0 - _now;
+		return utils::sub_saturate<u64>(expire0, _now);
 	}
 
 	// Stop after oneshot

From 6adf4eb457bdf946bbf26b80e8a3b72fb2943f59 Mon Sep 17 00:00:00 2001
From: Elad Ashkenazi <elad3356p@gmail.com>
Date: Sat, 3 Jun 2023 18:36:49 +0300
Subject: [PATCH 6/6] Update sys_timer.cpp

---
 rpcs3/Emu/Cell/lv2/sys_timer.cpp | 13 ++++++++-----
 1 file changed, 8 insertions(+), 5 deletions(-)

diff --git a/rpcs3/Emu/Cell/lv2/sys_timer.cpp b/rpcs3/Emu/Cell/lv2/sys_timer.cpp
index 23c94ec290f..4816a4ef3f1 100644
--- a/rpcs3/Emu/Cell/lv2/sys_timer.cpp
+++ b/rpcs3/Emu/Cell/lv2/sys_timer.cpp
@@ -144,13 +144,16 @@ void lv2_timer_thread::operator()()
 
 		for (const auto& timer : timers)
 		{
-			if (lv2_obj::check(timer))
+			while (lv2_obj::check(timer))
 			{
-				const u64 advised_sleep_time = timer->check(_now);
-
-				if (sleep_time > advised_sleep_time)
+				if (const u64 advised_sleep_time = timer->check(_now))
 				{
-					sleep_time = advised_sleep_time;
+					if (sleep_time > advised_sleep_time)
+					{
+						sleep_time = advised_sleep_time;
+					}
+
+					break;
 				}
 			}
 		}
