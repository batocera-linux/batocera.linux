diff --git a/src/main.cpp b/src/main.cpp
index 12aeb90..81d3c93 100644
--- a/src/main.cpp
+++ b/src/main.cpp
@@ -56,6 +56,7 @@ bool kickstart_rom = true;
 struct gui_info gui_data;
 
 static TCHAR optionsfile[MAX_DPATH];
+TCHAR core[32];
 
 void my_trim(TCHAR* s)
 {
@@ -587,6 +588,12 @@ static void parse_cmdline(int argc, TCHAR** argv)
 			firstconfig = false;
 			loaded = true;
 		}
+		else if (_tcsncmp(argv[i], _T("-core="), 6) == 0) 
+		{
+      TCHAR *txt = parsetextpath(argv[i] + 6);
+      _tcscpy(core, txt);
+      xfree(txt);
+    }
 		else if (_tcsncmp(argv[i], _T("-statefile="), 11) == 0)
 		{
 			const auto txt = parsetextpath(argv[i] + 11);
@@ -822,6 +829,7 @@ static int real_main2(int argc, TCHAR** argv)
 		abort();
 	}
 
+	_tcscpy(core, _T(""));
 	keyboard_settrans();
 	set_config_changed();
 	if (restart_config[0])
@@ -855,6 +863,20 @@ static int real_main2(int argc, TCHAR** argv)
 
 	copy_prefs(&currprefs, &changed_prefs);
 
+	if(_tcsncmp(core, _T("A500"), 4) == 0) {
+	  bip_a500(&currprefs, -1);
+	} else if(_tcsncmp(core, _T("A500P"), 5) == 0) {
+	  bip_a500plus(&currprefs, -1);
+	} else if(_tcsncmp(core, _T("A1200"), 5) == 0) {
+	  bip_a1200(&currprefs, -1);
+	} else if(_tcsncmp(core, _T("A2000"), 5) == 0) {
+	  bip_a2000(&currprefs, -1);
+	} else if(_tcsncmp(core, _T("A4000"), 5) == 0) {
+	  bip_a4000(&currprefs, -1);
+	} else if(_tcsncmp(core, _T("CD32"), 4) == 0) {
+	  bip_cd32(&currprefs, -1);
+	}
+
 	no_gui = !currprefs.start_gui;
 	if (restart_program == 2)
 		no_gui = true;
