diff --git a/src/GLideNHQ/TxQuantize.cpp b/src/GLideNHQ/TxQuantize.cpp
index b9f240f..3c61450 100644
--- a/src/GLideNHQ/TxQuantize.cpp
+++ b/src/GLideNHQ/TxQuantize.cpp
@@ -31,6 +31,7 @@
 #include <thread>
 
 #include "TxQuantize.h"
+#include "../convert.h"
 
 TxQuantize::TxQuantize()
 {
@@ -48,19 +49,19 @@ TxQuantize::~TxQuantize()
 
 const volatile unsigned char Five2Eight[32] =
 {
-	0, // 00000 = 00000000
-	8, // 00001 = 00001000
-	16, // 00010 = 00010000
-	25, // 00011 = 00011001
-	33, // 00100 = 00100001
-	41, // 00101 = 00101001
-	49, // 00110 = 00110001
-	58, // 00111 = 00111010
-	66, // 01000 = 01000010
-	74, // 01001 = 01001010
-	82, // 01010 = 01010010
-	90, // 01011 = 01011010
-	99, // 01100 = 01100011
+	  0, // 00000 = 00000000
+	  8, // 00001 = 00001000
+	 16, // 00010 = 00010000
+	 25, // 00011 = 00011001
+	 33, // 00100 = 00100001
+	 41, // 00101 = 00101001
+	 49, // 00110 = 00110001
+	 58, // 00111 = 00111010
+	 66, // 01000 = 01000010
+	 74, // 01001 = 01001010
+	 82, // 01010 = 01010010
+	 90, // 01011 = 01011010
+	 99, // 01100 = 01100011
 	107, // 01101 = 01101011
 	115, // 01110 = 01110011
 	123, // 01111 = 01111011
@@ -82,9 +83,66 @@ const volatile unsigned char Five2Eight[32] =
 	255  // 11111 = 11111111
 };
 
+const volatile unsigned char Four2Eight[16] =
+{
+	  0, // 0000 = 00000000
+	 17, // 0001 = 00010001
+	 34, // 0010 = 00100010
+	 51, // 0011 = 00110011
+	 68, // 0100 = 01000100
+	 85, // 0101 = 01010101
+	102, // 0110 = 01100110
+	119, // 0111 = 01110111
+	136, // 1000 = 10001000
+	153, // 1001 = 10011001
+	170, // 1010 = 10101010
+	187, // 1011 = 10111011
+	204, // 1100 = 11001100
+	221, // 1101 = 11011101
+	238, // 1110 = 11101110
+	255  // 1111 = 11111111
+};
+
+const volatile unsigned char Three2Four[8] =
+{
+	 0, // 000 = 0000
+     2, // 001 = 0010
+	 4, // 010 = 0100
+	 6, // 011 = 0110
+	 9, // 100 = 1001
+	11, // 101 = 1011
+    13, // 110 = 1101
+	15, // 111 = 1111
+};
+
+const volatile unsigned char Three2Eight[8] =
+{
+	  0, // 000 = 00000000
+     36, // 001 = 00100100
+	 73, // 010 = 01001001
+	109, // 011 = 01101101
+	146, // 100 = 10010010
+	182, // 101 = 10110110
+    219, // 110 = 11011011
+	255, // 111 = 11111111
+};
+const volatile unsigned char Two2Eight[4] =
+{
+	  0, // 00 = 00000000
+	 85, // 01 = 01010101
+	170, // 10 = 10101010
+	255  // 11 = 11111111
+};
+
+const volatile unsigned char One2Four[2] =
+{
+	 0, // 0 = 0000
+	15, // 1 = 1111
+};
+
 const volatile unsigned char One2Eight[2] =
 {
-	0, // 0 = 00000000
+	  0, // 0 = 00000000
 	255, // 1 = 11111111
 };
 
diff --git a/src/convert.h b/src/convert.h
index a535836..63dfb40 100644
--- a/src/convert.h
+++ b/src/convert.h
@@ -3,6 +3,15 @@
 
 #include "Types.h"
 
+extern const volatile unsigned char Five2Eight[32];
+extern const volatile unsigned char Four2Eight[16];
+extern const volatile unsigned char Three2Four[8];
+extern const volatile unsigned char Three2Eight[8];
+extern const volatile unsigned char Two2Eight[4];
+extern const volatile unsigned char One2Four[2];
+extern const volatile unsigned char One2Eight[2];
+
+/*
 const volatile unsigned char Five2Eight[32] =
 {
 	  0, // 00000 = 00000000
@@ -101,6 +110,7 @@ const volatile unsigned char One2Eight[2] =
 	  0, // 0 = 00000000
 	255, // 1 = 11111111
 };
+*/
 
 static inline void UnswapCopyWrap(const u8 *src, u32 srcIdx, u8 *dest, u32 destIdx, u32 destMask, u32 numBytes)
 {
