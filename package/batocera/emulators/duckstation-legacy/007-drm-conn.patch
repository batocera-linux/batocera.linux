diff --git a/src/common/drm_display.cpp b/src/common/drm_display.cpp
index 0064d85..a4289f3 100644
--- a/src/common/drm_display.cpp
+++ b/src/common/drm_display.cpp
@@ -108,6 +108,8 @@ void DRMDisplay::RestoreBuffer()
 
 bool DRMDisplay::TryOpeningCard(int card, u32 width, u32 height, float refresh_rate)
 {
+  int drmConn = 0;
+
   if (m_card_fd >= 0)
     close(m_card_fd);
 
@@ -127,9 +129,27 @@ bool DRMDisplay::TryOpeningCard(int card, u32 width, u32 height, float refresh_r
 
   Assert(!m_connector);
 
+  // batocera
+  {
+    FILE* fdDrmConn;
+    int drmConnRead;
+    if((fdDrmConn = fopen("/var/run/drmConn", "r")) != NULL) {
+      if(fscanf(fdDrmConn, "%i", &drmConnRead) == 1) {
+	if(drmConnRead>=0 && drmConn<resources->count_connectors) {
+	  drmConn = drmConnRead;
+	}
+      }
+    }
+  }
+  //
+
   for (int i = 0; i < resources->count_connectors; i++)
   {
-    drmModeConnector* next_connector = drmModeGetConnector(m_card_fd, resources->connectors[i]);
+    drmModeConnector* next_connector;
+
+    if(i != drmConn) continue;
+
+    next_connector = drmModeGetConnector(m_card_fd, resources->connectors[i]);
     if (next_connector->connection == DRM_MODE_CONNECTED)
     {
       m_connector = next_connector;
@@ -275,6 +295,8 @@ void DRMDisplay::PresentBuffer(u32 fb_id, bool wait_for_vsync)
 bool DRMDisplay::GetCurrentMode(u32* width, u32* height, float* refresh_rate, int card, int connector)
 {
   int card_fd = -1;
+  int drmConn = 0;
+
   if (card < 0)
   {
     for (int try_card = 0; try_card < MAX_CARDS_TO_TRY; try_card++)
@@ -325,7 +325,21 @@ bool DRMDisplay::GetCurrentMode(u32* width, u32* height, float* refresh_rate, in
     Log_ErrorPrintf("drmModeGetResources() failed: %d (%s)", errno, strerror(errno));
     return false;
   }
-
+  
+  // batocera
+  {
+    FILE* fdDrmConn;
+    int drmConnRead;
+    if((fdDrmConn = fopen("/var/run/drmConn", "r")) != NULL) {
+      if(fscanf(fdDrmConn, "%i", &drmConnRead) == 1) {
+        if(drmConnRead>=0 && drmConn<resources->count_connectors) {
+          drmConn = drmConnRead;
+        }
+      }
+    }
+  }
+  //
+  
   ScopedGuard resources_guard([resources]() { drmModeFreeResources(resources); });
   drmModeConnector* connector_ptr = nullptr;
   if (connector < 0)
   {
     for (int i = 0; i < resources->count_connectors; i++)
     {
+      if(i != drmConn) continue;
       connector_ptr = drmModeGetConnector(card_fd, resources->connectors[i]);
       if (connector_ptr->connection == DRM_MODE_CONNECTED)
         break;
@@ -368,4 +405,4 @@ bool DRMDisplay::GetCurrentMode(u32* width, u32* height, float* refresh_rate, in
     *refresh_rate = current_refresh_rate;
 
   return true;
-}
\ No newline at end of file
+}
