diff --git a/pcsx2/PAD/Linux/SDL/joystick.cpp b/pcsx2/PAD/Linux/SDL/joystick.cpp
index 548b72e..fa4998f 100644
--- a/pcsx2/PAD/Linux/SDL/joystick.cpp
+++ b/pcsx2/PAD/Linux/SDL/joystick.cpp
@@ -21,6 +21,32 @@
 // Joystick definitions //
 //////////////////////////
 
+void readSDL_PADSORDERCONFIG(int* SDL_PADSORDERCONFIG) {
+  char* env;
+  char val[16];
+  int pos = 0, pos_start = 0, n = 0;
+
+  for(int i=0; i<32; i++) SDL_PADSORDERCONFIG[i] = i;
+
+  env = getenv("SDL_PADSORDERCONFIG");
+  if(env != NULL) {
+    while(env[pos] != '\0') {
+      if(env[pos] == ';') {
+	if(pos-pos_start > 15) return;
+	strncpy(val, env+pos_start, pos-pos_start);
+	val[pos-pos_start] = '\0';
+	SDL_PADSORDERCONFIG[n++] = atoi(val);
+	pos_start = pos+1;
+      }
+      pos++;
+    }
+    if(pos-pos_start > 15) return;
+    strncpy(val, env+pos_start, pos-pos_start);
+    val[pos-pos_start] = '\0';
+    SDL_PADSORDERCONFIG[n] = atoi(val);
+  }
+}
+
 // opens handles to all possible joysticks
 void JoystickInfo::EnumerateJoysticks(std::vector<std::unique_ptr<GamePad>>& vjoysticks)
 {
@@ -64,9 +90,12 @@ void JoystickInfo::EnumerateJoysticks(std::vector<std::unique_ptr<GamePad>>& vjo
 
 	vjoysticks.clear();
 
+	int SDL_PADSORDERCONFIG[32];
+	readSDL_PADSORDERCONFIG(SDL_PADSORDERCONFIG);
+
 	for (int i = 0; i < SDL_NumJoysticks(); ++i)
 	{
-		vjoysticks.push_back(std::unique_ptr<GamePad>(new JoystickInfo(i)));
+		vjoysticks.push_back(std::unique_ptr<GamePad>(new JoystickInfo(SDL_PADSORDERCONFIG[i])));
 		// Something goes wrong in the init, let's drop it
 		if (!vjoysticks.back()->IsProperlyInitialized())
 			vjoysticks.pop_back();
