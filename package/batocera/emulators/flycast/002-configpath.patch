diff --git a/core/linux-dist/main.cpp b/core/linux-dist/main.cpp
index b956005..6fad7c1 100644
--- a/core/linux-dist/main.cpp
+++ b/core/linux-dist/main.cpp
@@ -117,9 +117,8 @@ void common_linux_setup();
 
 // Find the user config directory.
 // The following folders are checked in this order:
-// $HOME/.reicast
+// $HOME/.flycast
 // $HOME/.config/flycast
-// $HOME/.config/reicast
 // If no folder exists, $HOME/.config/flycast is created and used.
 std::string find_user_config_dir()
 {
@@ -127,10 +126,10 @@ std::string find_user_config_dir()
 	std::string xdg_home;
 	if (nowide::getenv("HOME") != NULL)
 	{
-		// Support for the legacy config dir at "$HOME/.reicast"
-		std::string legacy_home = (std::string)nowide::getenv("HOME") + "/.reicast/";
+		// Support for the legacy config dir at "$HOME/.flycast"
+		std::string legacy_home = (std::string)nowide::getenv("HOME") + "/.flycast/";
 		if (flycast::stat(legacy_home.c_str(), &info) == 0 && (info.st_mode & S_IFDIR))
-			// "$HOME/.reicast" already exists, let's use it!
+			// "$HOME/.flycast" already exists, let's use it!
 			return legacy_home;
 
 		/* If $XDG_CONFIG_HOME is not set, we're supposed to use "$HOME/.config" instead.
@@ -149,10 +148,6 @@ std::string find_user_config_dir()
 		if (flycast::stat(fullpath.c_str(), &info) == 0 && (info.st_mode & S_IFDIR))
 			// Found .config/flycast
 			return fullpath;
-		fullpath = xdg_home + "/reicast/";
-		if (flycast::stat(fullpath.c_str(), &info) == 0 && (info.st_mode & S_IFDIR))
-			// Found .config/reicast
-			return fullpath;
 
 		// Create .config/flycast
 		fullpath = xdg_home + "/flycast/";
@@ -167,9 +162,8 @@ std::string find_user_config_dir()
 
 // Find the user data directory.
 // The following folders are checked in this order:
-// $HOME/.reicast/data
+// $HOME/.flycast/data
 // $HOME/.local/share/flycast
-// $HOME/.local/share/reicast
 // If no folder exists, $HOME/.local/share/flycast is created and used.
 std::string find_user_data_dir()
 {
@@ -177,10 +171,10 @@ std::string find_user_data_dir()
 	std::string xdg_home;
 	if (nowide::getenv("HOME") != NULL)
 	{
-		// Support for the legacy config dir at "$HOME/.reicast/data"
-		std::string legacy_data = (std::string)nowide::getenv("HOME") + "/.reicast/data/";
+		// Support for the legacy config dir at "$HOME/.flycast/data"
+		std::string legacy_data = (std::string)nowide::getenv("HOME") + "/.flycast/data/";
 		if (flycast::stat(legacy_data.c_str(), &info) == 0 && (info.st_mode & S_IFDIR))
-			// "$HOME/.reicast/data" already exists, let's use it!
+			// "$HOME/.flycast/data" already exists, let's use it!
 			return legacy_data;
 
 		/* If $XDG_DATA_HOME is not set, we're supposed to use "$HOME/.local/share" instead.
@@ -199,10 +193,6 @@ std::string find_user_data_dir()
 		if (flycast::stat(fullpath.c_str(), &info) == 0 && (info.st_mode & S_IFDIR))
 			// Found .local/share/flycast
 			return fullpath;
-		fullpath = xdg_home + "/reicast/";
-		if (flycast::stat(fullpath.c_str(), &info) == 0 && (info.st_mode & S_IFDIR))
-			// Found .local/share/reicast
-			return fullpath;
 
 		// Create .local/share/flycast
 		fullpath = xdg_home + "/flycast/";
@@ -233,12 +223,10 @@ static void addDirectoriesFromPath(std::vector<std::string>& dirs, const std::st
 
 // Find a file in the user and system config directories.
 // The following folders are checked in this order:
-// $HOME/.reicast
+// $HOME/.flycast
 // $HOME/.config/flycast
-// $HOME/.config/reicast
 // if XDG_CONFIG_DIRS is defined:
 //   <$XDG_CONFIG_DIRS>/flycast
-//   <$XDG_CONFIG_DIRS>/reicast
 // else
 //   /etc/flycast/
 //   /etc/xdg/flycast/
@@ -250,8 +238,8 @@ std::vector<std::string> find_system_config_dirs()
 	std::string xdg_home;
 	if (nowide::getenv("HOME") != NULL)
 	{
-		// Support for the legacy config dir at "$HOME/.reicast"
-		dirs.push_back((std::string)nowide::getenv("HOME") + "/.reicast/");
+		// Support for the legacy config dir at "$HOME/.flycast"
+		dirs.push_back((std::string)nowide::getenv("HOME") + "/.flycast/");
 		xdg_home = (std::string)nowide::getenv("HOME") + "/.config";
 	}
 	if (nowide::getenv("XDG_CONFIG_HOME") != NULL)
@@ -261,14 +249,12 @@ std::vector<std::string> find_system_config_dirs()
 	{
 		// XDG config locations
 		dirs.push_back(xdg_home + "/flycast/");
-		dirs.push_back(xdg_home + "/reicast/");
 	}
 
 	if (nowide::getenv("XDG_CONFIG_DIRS") != NULL)
 	{
 		std::string path = (std::string)nowide::getenv("XDG_CONFIG_DIRS");
 		addDirectoriesFromPath(dirs, path, "/flycast/");
-		addDirectoriesFromPath(dirs, path, "/reicast/");
 	}
 	else
 	{
@@ -282,17 +268,13 @@ std::vector<std::string> find_system_config_dirs()
 
 // Find a file in the user data directories.
 // The following folders are checked in this order:
-// $HOME/.reicast/data
+// $HOME/.flycast/data
 // $HOME/.local/share/flycast
-// $HOME/.local/share/reicast
 // if XDG_DATA_DIRS is defined:
 //   <$XDG_DATA_DIRS>/flycast
-//   <$XDG_DATA_DIRS>/reicast
 // else
 //   /usr/local/share/flycast
 //   /usr/share/flycast
-//   /usr/local/share/reicast
-//   /usr/share/reicast
 // <$FLYCAST_BIOS_PATH>
 // ./
 // ./data
@@ -303,8 +285,8 @@ std::vector<std::string> find_system_data_dirs()
 	std::string xdg_home;
 	if (nowide::getenv("HOME") != NULL)
 	{
-		// Support for the legacy data dir at "$HOME/.reicast/data"
-		dirs.push_back((std::string)nowide::getenv("HOME") + "/.reicast/data/");
+		// Support for the legacy data dir at "$HOME/.flycast/data"
+		dirs.push_back((std::string)nowide::getenv("HOME") + "/.flycast/data/");
 		xdg_home = (std::string)nowide::getenv("HOME") + "/.local/share";
 	}
 	if (nowide::getenv("XDG_DATA_HOME") != NULL)
@@ -314,8 +296,7 @@ std::vector<std::string> find_system_data_dirs()
 	{
 		// XDG data locations
 		dirs.push_back(xdg_home + "/flycast/");
-		dirs.push_back(xdg_home + "/reicast/");
-		dirs.push_back(xdg_home + "/reicast/data/");
+		dirs.push_back(xdg_home + "/flycast/data/");
 	}
 
 	if (nowide::getenv("XDG_DATA_DIRS") != NULL)
@@ -323,14 +304,11 @@ std::vector<std::string> find_system_data_dirs()
 		std::string path = (std::string)nowide::getenv("XDG_DATA_DIRS");
 
 		addDirectoriesFromPath(dirs, path, "/flycast/");
-		addDirectoriesFromPath(dirs, path, "/reicast/");
 	}
 	else
 	{
 		dirs.push_back("/usr/local/share/flycast/");
 		dirs.push_back("/usr/share/flycast/");
-		dirs.push_back("/usr/local/share/reicast/");
-		dirs.push_back("/usr/share/reicast/");
 	}
 	if (nowide::getenv("FLYCAST_BIOS_PATH") != NULL)
 	{
