#!/bin/bash

ACTION=$1
shift

do_help() {
    echo "${1} scanlist" >&2
    echo "${1} list" >&2
    echo "${1} wps" >&2
}

do_wps() {
    do_start
    [ $? -eq 0 ] || exit 1

    #use grep -v *AO to filter network already in usage!
    #head will filter to n-evetns
    for z in 1 2 3; do
    for i in $(connmanctl services | grep -v *AO | grep -o "wifi_[[:xdigit:]]*_[[:xdigit:]]*_managed_psk" | head -n 3)
    do
        connmanctl connect "$i" &>/tmp/wps.log
        sleep 2

        if grep -q "^Connected" /tmp/wps.log; then
            echo "WPS connected!"
            conn_cred="/var/lib/connman/$i/settings"
            ssid="$(batocera-settings "$conn_cred" get Name)"
            psk="$(batocera-settings "$conn_cred" get Passphrase)"
            echo "SSID is: $ssid"
            echo "PKEY is: $psk"
            #batocera-settings set wifi.ssid "$ssid"
            #batocera-settings set wifi.key "$psk"
            break 2
        elif grep -q "Already connected" /tmp/wps.log; then
            echo "Connections already established to network"
            break 2
        else
            echo "Failed: WPS connection"
        fi
    done
    done
}

do_list() {
    connmanctl services | sed 's/^...[ ]*//' | awk -F '[ ]*[ ]wifi_[[:alnum:]]*_' '{if (NF==2) print $1}'
}

do_scanlist() {
    connmanctl scan wifi >/dev/null 2>/dev/null
    do_list
}

do_enable() {
    SSID=$1
    PSK=$2

    mkdir -p "/var/lib/connman" || return 1
    cat > "/var/lib/connman/batocera_wifi.config" <<EOF
[global]
Name=batocera

[service_batocera_default]
Type=wifi
Name=${SSID}
EOF
    if test "${PSK}" != ""
    then
	echo "Passphrase=${PSK}" >> "/var/lib/connman/batocera_wifi.config"
    fi

    connmanctl enable wifi || return 1
    connmanctl scan   wifi || return 1
    return 0
}

do_disable() {
    connmanctl disable wifi
}

do_start() {
    settingsWlan="$(batocera-settings -command load -key wifi.enabled)"
    if [ "$settingsWlan" != "1" ];then
        return 0
    fi
    connmanctl enable wifi || return 1
    connmanctl scan   wifi || return 1
}

case "${ACTION}" in
    "list")
	do_list
	;;
    "scanlist")
	do_wps
	;;
    "start")
	do_start
	;;
    "enable")
	SSID=$1
	PSK=$2
	do_enable "${SSID}" "${PSK}" || exit 1
	;;
    "disable")
	do_disable || exit 1
	;;
    "wps")
        do_wps || exit 1
        ;;
    *)
	do_help "${0}"
esac
exit 0
