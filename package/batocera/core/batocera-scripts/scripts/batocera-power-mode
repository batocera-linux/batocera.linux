#!/bin/bash

if ! { [ -e /sys/devices/system/cpu/cpufreq/policy0/scaling_governor ] && 
    [ -e /sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors ]; }; then
        exit 0
fi

# Check if governor exists for CPU
check_governor() {
    local GOVERNOR_TO_CHECK=$1
    local AVAILABLE_GOVERNORS_PATH="/sys/devices/system/cpu/cpufreq/policy0/scaling_available_governors"
    
    local AVAILABLE_GOVERNORS=$(cat "$AVAILABLE_GOVERNORS_PATH")
    if echo "$AVAILABLE_GOVERNORS" | grep -q "\b$GOVERNOR_TO_CHECK\b"; then
        return 0
    else
        return 1
    fi
}

# Set governor
set_governor() {
   local GOVERNOR_NAME=$1

   # Apply the governor to all policies
   for policy in /sys/devices/system/cpu/cpufreq/policy*; do
       if [ -e "$policy/scaling_governor" ]; then
           local CURRENT_GOVERNOR=$(cat "$policy/scaling_governor")
           if [ "$CURRENT_GOVERNOR" != "$GOVERNOR_NAME" ]; then
               echo $GOVERNOR_NAME > "$policy/scaling_governor" 2>/dev/null
           fi
       fi
   done
}

# Check if Energy Performance Preferences are available
epp_available() {
    if [ -e /sys/devices/system/cpu/cpu0/cpufreq/energy_performance_available_preferences ]; then
        return 0
    else
        return 1
    fi
}

# Set Energy Performance Preference
set_epp() {
    local PREFERENCE=$1
    local AVAILABLE_PREFERENCES
    AVAILABLE_PREFERENCES=$(cat /sys/devices/system/cpu/cpu0/cpufreq/energy_performance_available_preferences)

    # Check if the specified preference is available
    if ! echo "$AVAILABLE_PREFERENCES" | grep -q "\b$PREFERENCE\b"; then
        return 1
    fi

    for cpu in /sys/devices/system/cpu/cpu*/cpufreq/energy_performance_preference; do
        if [ -e "$cpu" ]; then
            echo "$PREFERENCE" > "$cpu" 2>/dev/null
        fi
    done
}

# Determine which Governors & if applicable EPP to set based on powermode setting
handle_powermode() {
    local POWERMODE_NAME=$1
    case "$POWERMODE_NAME" in
        "highperformance")
            set_governor "performance"
            if epp_available; then
                set_epp "performance"
            fi
            ;;
        "balanced")
            if check_governor "schedutil"; then
                set_governor "schedutil"
                if epp_available; then
                    set_epp "balance_performance"
                fi
            elif check_governor "ondemand"; then
                set_governor "ondemand"
                if epp_available; then
                    set_epp "balance_performance"
                fi
            elif check_governor "conservative"; then
                set_governor "conservative"
                if epp_available; then
                    set_epp "balance_performance"
                fi
            else
                set_governor "performance"
                if epp_available; then
                    set_epp "balance_performance"
                fi
            fi
            ;;
        "powersaver")
            set_governor "powersave"
            if epp_available; then
                set_epp "power"
            fi
            ;;
        *)
            ;;
    esac
}

# Check for input
INPUT=$1

# Handle AC input
if [ "$INPUT" = "ac" ]; then
    POWER_MODE=$(cat /var/tmp/power_mode 2>/dev/null)
    if [ -z "$POWER_MODE" ]; then
        POWER_MODE="$(/usr/bin/batocera-settings-get-master global.powermode)"
        if [ -z "${POWER_MODE}" ]; then
            SYSTEM_GOVERNOR="$(/usr/bin/batocera-settings-get-master system.cpu.governor)"
            if check_governor "$SYSTEM_GOVERNOR"; then
                set_governor "$SYSTEM_GOVERNOR"
                set_epp "default"
                exit 0
            fi
        fi
    fi
    handle_powermode "$POWER_MODE"
    exit 0
fi

# Handle battery input
if [ "$INPUT" = "battery" ]; then
    POWER_MODE="$(/usr/bin/batocera-settings-get-master global.batterymode)"
    if [ -z "$POWER_MODE" ]; then
        POWER_MODE="balanced"
    fi
    handle_powermode "$POWER_MODE"
    exit 0
fi

# Handle highperformance, balanced, and powersaver inputs
if [ "$INPUT" = "highperformance" ] || [ "$INPUT" = "balanced" ] || [ "$INPUT" = "powersaver" ]; then
    handle_powermode "$INPUT"
    exit 0
fi

# Invalid input
echo "Invalid input. Usage: $0 [ac|battery|highperformance|balanced|powersaver]"
exit 1
