#!/bin/bash

### short version (for osd)
if test "$1" = "--short"
then
    BATT=$(cat /sys/class/power_supply/{BAT,bat}*/uevent 2>/dev/null | grep -E "^POWER_SUPPLY_CAPACITY=" | sed -e s+'^POWER_SUPPLY_CAPACITY='++ | sort -rn | head -1)
    DT=$(date +%H:%M)
    if test -n "${BATT}"
    then
	echo "Battery: ${BATT}% - ${DT}"
    else
	echo "${DT}"
    fi
    exit 0
fi
###

V_ARCH=$(cat /usr/share/batocera/batocera.arch)
V_CPUNB=$(grep -E $'^processor\t:' /proc/cpuinfo | wc -l)
V_CPUMODEL1=$(grep -E $'^model name\t:' /proc/cpuinfo | head -1 | sed -e s+'^model name\t: '++)
V_SYSTEM=$(uname -rs)

# battery
BATT=$(cat /sys/class/power_supply/{BAT,bat}*/uevent 2>/dev/null | grep -E "^POWER_SUPPLY_CAPACITY=" | sed -e s+'^POWER_SUPPLY_CAPACITY='++ | sort -rn | head -1)
if test -n "${BATT}"
then
    echo "Battery: ${BATT}%"
fi

# PAD Battery
for PADBAT in /sys/class/power_supply/*/device/uevent
do
    if test -e "${PADBAT}" # when nothing is found, the expression is return
    then
	# HID devices only
	PADNAME=$(grep -E '^HID_NAME=' "${PADBAT}" | sed -e s+'^HID_NAME='++)
	if test -n "${PADNAME}"
	then
	    # parent of parent / uevent
	    BATTUEVENT=$(dirname "${PADBAT}")
	    BATTUEVENT=$(dirname "${BATTUEVENT}")/uevent
	    BATT=$(grep -E "^POWER_SUPPLY_CAPACITY=" "${BATTUEVENT}" | sed -e s+'^POWER_SUPPLY_CAPACITY='++ | sort -rn | head -1)
	    echo "${PADNAME}: ${BATT}%"
	fi
    fi
done

# temperature
# Unit: millidegree Celsius
TEMPE=$(cat /sys/devices/virtual/thermal/thermal_zone*/temp 2>/dev/null | sort -rn | head -1 | sed -e s+"[0-9][0-9][0-9]$"++)
if test -n "${TEMPE}"
then
    echo "Temperature: ${TEMPE}Â°C"
fi

echo "Architecture: ${V_ARCH}"
if test -e /sys/firmware/devicetree/base/model
then
    DTMODEL=$(tr -d '\0' </sys/firmware/devicetree/base/model)
    echo "Model: ${DTMODEL}"
fi

if echo "${V_ARCH}" | grep -qE "^rpi[0-9]$"
then
    REVISION=$(grep -E $'^Revision\t:' /proc/cpuinfo | head -1 | sed -e s+'^Revision\t: '++)
    test -n "${REVISION}" && echo "Revision: ${REVISION}"
fi
echo "System: ${V_SYSTEM}"

MEM_TOTAL_KB=$(head /proc/meminfo | grep -E "^MemTotal:" | sed -e s+"^MemTotal:[ ]*\([0-9]*\) kB$"+"\\1"+)
MEM_AVAILABLE_KB=$(head /proc/meminfo | grep -E "^MemAvailable:" | sed -e s+"^MemAvailable:[ ]*\([0-9]*\) kB$"+"\\1"+)
MEM_TOTAL_MB=$(expr "${MEM_TOTAL_KB}" / 1024)
MEM_AVAILABLE_MB=$(expr "${MEM_AVAILABLE_KB}" / 1024)
echo "Available memory: ${MEM_AVAILABLE_MB}/${MEM_TOTAL_MB} MB"

if test "${V_ARCH}" = "x86" -o "${V_ARCH}" = "x86_64"
then
    V_OPENGLVERSION=$(DISPLAY=:0.0 glxinfo 2>/dev/null | grep -E '^OpenGL core profile version string:' | sed -e s+'^OpenGL core profile version string:[ ]*'++)
    if test -z "${V_OPENGLVERSION}"
    then
	V_OPENGLVERSION=$(DISPLAY=:0.0 glxinfo 2>/dev/null | grep -E '^OpenGL version string:' | sed -e s+'^OpenGL version string:[ ]*'++)
    fi
    echo "OpenGL: ${V_OPENGLVERSION}"
fi
[[ -z ${V_CPUMODEL1} ]] || echo "Cpu model: ${V_CPUMODEL1}"
echo "Cpu number: ${V_CPUNB}"
if grep -q " avx2" /proc/cpuinfo
then
    echo "Cpu feature: avx2"
fi
