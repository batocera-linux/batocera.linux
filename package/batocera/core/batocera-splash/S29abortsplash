#!/bin/bash
# Stop Splash Screen

[[ $1 == start ]] || exit 0

splash_autoplay ()
{
    count=0
    while [[ $count -lt 90 ]]
    do
        sleep 1
        ((count++))
        kill -0 $PID &>/dev/null  || { echo "Video finished"; break; }
    done
}

splash_default ()
{
    # Stop the video when ready
    # Wait for emulationstation or Kodi, but not more than 20 seconds
    count=0
    while [[ ! -f "/tmp/emulationstation.ready" && ! -e "/var/run/kodi.msg" && $count -lt 20 ]]
    do
        sleep 1
        ((count++))
    done
}

#### MAIN

# Is service is active? PPID is videoplayer or pic sleep timer
init_service=/etc/init.d/S03splash
PID=$(pgrep -P $(pgrep -f $init_service)) || exit 0 # No service found!

# If the timer for picture is active then kill this PID to avoid
# unwanted behaviour in splash_autoplay
[[ $PID == $(pgrep -f "sleep infinity") ]] && picture=1

# Read Config and do action
splash_setting=$(batocera-settings -command load -key splash.screen.length)
case ${splash_setting,,} in

    def*)
        # Standard BATOCERA setting, fastest boot possible
        # A video splash will be displayed ~16s on Pi3 platform
        #
        [[ $picture -eq 1 ]] || splash_default &
        kill -9 $PID
    ;;

    auto)
        # Play video as long as possible
        #
        [[ $picture -eq 1 ]] || splash_autoplay
        kill -9 $PID
    ;;

    k[0-90]*|[0-90]*)
        # Stop loading process for x seconds, attention there will be no
        # further steps so you can "lock" the system
        #
        sleeptimer=${splash_setting//[^[:digit:]]/}
        [[ $picture -eq 1 && $sleeptimer -gt 10 ]] && sleeptimer=10
        sleep $sleeptimer
        kill -9 $PID
    ;;

    i[0-90]*)
        # This mode will not kill video in background this is a posible setup
        # for RPi system and you will smoothly boot into ES
        #
        sleeptimer=${splash_setting//[^[:digit:]]/}
        [[ $picture -eq 1 && $sleeptimer -gt 10 ]] && sleeptimer=10
        sleep $sleeptimer
        [[ $picture -eq 1 ]] && kill -9 $PID
    ;;

    *)
        # Other settings --> not valid
        #
        kill -9 $PID
        exit 1
    ;;
esac
exit $?
