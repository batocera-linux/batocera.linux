--- a/src/evdev_helper.cpp	2015-11-09 11:19:35.000000000 +0100
+++ b/src/evdev_helper.cpp	2015-12-06 21:16:17.934897114 +0100
@@ -54,57 +54,9 @@
 X11KeysymEnum::X11KeysymEnum() :
   EnumBox<int>("X11Keysym")
 {
-  Display* dpy = XOpenDisplay(NULL);
-  if (!dpy)
-  {
-    log_error("unable to open X11 display, X11 keynames will not be available");
-  }
-  else
-  {
-    process_keymap(dpy);
-    XCloseDisplay(dpy);
-  }
-}
-
-void
-X11KeysymEnum::process_keymap(Display* dpy)
-{
-  int min_keycode, max_keycode;
-  XDisplayKeycodes(dpy, &min_keycode, &max_keycode);
-
-  int num_keycodes = max_keycode - min_keycode + 1;
-  int keysyms_per_keycode;
-  KeySym* keymap = XGetKeyboardMapping(dpy, static_cast<KeyCode>(min_keycode),
-                                       num_keycodes,
-                                       &keysyms_per_keycode);
 
-  for(int i = 0; i < num_keycodes; ++i)
-  {
-    if (keymap[i*keysyms_per_keycode] != NoSymbol)
-    {
-      KeySym keysym = keymap[i*keysyms_per_keycode];
-
-      // FIXME: Duplicate entries confuse the conversion
-      // std::map<KeySym, int>::iterator it = mapping.find(keysym);
-      // if (it != mapping.end())
-      //   std::cout << "Duplicate keycode: " << i << std::endl;
-
-      const char* keysym_str = XKeysymToString(keysym);
-      if (!keysym_str)
-      {
-        log_warn("couldn't convert keysym " << keysym << " to string");
-      }
-      else
-      {
-        std::ostringstream str;
-        str << "XK_" << keysym_str;
-        add(i, str.str());
-      }
-    }
-  }
-
-  XFree(keymap);
 }
+
 
 int xkeysym2keycode(const std::string& name)
 {
