diff --git a/Makefile b/Makefile
index 9645888..9ad145d 100644
--- a/Makefile
+++ b/Makefile
@@ -3,18 +3,10 @@ FRONTEND_SUPPORTS_RGB565 = 1
 HAVE_RUST = 0
 HAVE_OPENGL = 0
 HAVE_JIT = 0
-HAVE_CHD = 1
 
 CORE_DIR := .
 HAVE_GRIFFIN = 0
 
-SPACE :=
-SPACE := $(SPACE) $(SPACE)
-BACKSLASH :=
-BACKSLASH := \$(BACKSLASH)
-filter_out1 = $(filter-out $(firstword $1),$1)
-filter_out2 = $(call filter_out1,$(call filter_out1,$1))
-
 ifeq ($(platform),)
    platform = unix
    ifeq ($(shell uname -a),)
@@ -38,11 +30,6 @@ ifneq ($(platform), osx)
    endif
 endif
 
-prefix := /usr
-libdir := $(prefix)/lib
-
-LIBRETRO_INSTALL_DIR := libretro
-
 NEED_CD = 1
 NEED_TREMOR = 1
 NEED_BPP = 32
@@ -56,11 +43,6 @@ ifeq ($(HAVE_OPENGL),1)
    TARGET_NAME := mednafen_saturn_hw
 endif
 
-GIT_VERSION := " $(shell git rev-parse --short HEAD || echo unknown)"
-ifneq ($(GIT_VERSION)," unknown")
-   CXXFLAGS += -DGIT_VERSION=\"$(GIT_VERSION)\"
-endif
-
 # Unix
 ifneq (,$(findstring unix,$(platform)))
    TARGET := $(TARGET_NAME)_libretro.so
@@ -69,10 +51,6 @@ ifneq (,$(findstring unix,$(platform)))
    ifneq ($(shell uname -p | grep -E '((i.|x)86|amd64)'),)
       IS_X86 = 1
    endif
-   ifneq (,$(findstring Haiku,$(shell uname -s)))
-   CXXFLAGS += -fpermissive
-   PTHREAD_FLAGS = -lpthread
-   endif
    LDFLAGS += $(PTHREAD_FLAGS)
    FLAGS += $(PTHREAD_FLAGS) -DHAVE_MKDIR
    ifeq ($(HAVE_OPENGL),1)
@@ -120,7 +98,7 @@ else ifneq (,$(findstring ios,$(platform)))
    CC = cc -arch armv7 -isysroot $(IOSSDK)
    CXX = c++ -arch armv7 -isysroot $(IOSSDK)
    IPHONEMINVER :=
-   ifeq ($(platform),$(filter $(platform),ios9 ios-arm64))
+   ifeq ($(platform),ios9)
       IPHONEMINVER = -miphoneos-version-min=8.0
    else
       IPHONEMINVER = -miphoneos-version-min=5.0
@@ -253,6 +231,7 @@ else ifeq ($(platform), emscripten)
                  -Dretro_fseek=gg_retro_fseek\
                  -Dretro_fread=gg_retro_fread\
                  -Dretro_fwrite=gg_retro_fwrite\
+                 -Dpath_is_directory=gg_path_is_directory\
                  -Dscond_broadcast=gg_scond_broadcast\
                  -Dscond_wait_timeout=gg_scond_wait_timeout\
                  -Dscond_signal=gg_scond_signal\
@@ -293,6 +272,14 @@ else ifeq ($(platform), emscripten)
                  -Dfilestream_write=gg_filestream_write\
                  -Dfilestream_rewind=gg_filestream_rewind\
                  -Dfilestream_putc=gg_filestream_putc\
+                 -Dpath_is_character_special=gg_path_is_character_special\
+                 -Dpath_is_valid=gg_path_is_valid\
+                 -Dpath_is_compressed=gg_path_is_compressed\
+                 -Dpath_is_compressed_file=gg_path_is_compressed_file\
+                 -Dpath_is_absolute=gg_path_is_absolute\
+                 -Dpath_is_directory=gg_path_is_directory\
+                 -Dpath_get_size=gg_path_get_size\
+                 -Dpath_get_extension=gg_path_get_extension\
                  -Dstring_is_empty=gg_string_is_empty\
                  -Dstring_is_equal=gg_string_is_equal\
                  -Dstring_to_upper=gg_string_to_upper\
@@ -316,105 +303,6 @@ ifeq ($(HAVE_OPENGL),1)
 	endif
 endif
 
-# Windows MSVC 2017 all architectures
-else ifneq (,$(findstring windows_msvc2017,$(platform)))
-
-    NO_GCC := 1
-    FLAGS += -DHAVE__MKDIR -DNOMINMAX -D__PIC__
-
-	PlatformSuffix = $(subst windows_msvc2017_,,$(platform))
-	ifneq (,$(findstring desktop,$(PlatformSuffix)))
-		WinPartition = desktop
-		MSVC2017CompileFlags = -DWINAPI_FAMILY=WINAPI_FAMILY_DESKTOP_APP -FS
-		LDFLAGS += -MANIFEST -LTCG:incremental -NXCOMPAT -DYNAMICBASE -DEBUG -OPT:REF -INCREMENTAL:NO -SUBSYSTEM:WINDOWS -MANIFESTUAC:"level='asInvoker' uiAccess='false'" -OPT:ICF -ERRORREPORT:PROMPT -NOLOGO -TLBID:1
-		LIBS += kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib
-	else ifneq (,$(findstring uwp,$(PlatformSuffix)))
-		WinPartition = uwp
-		MSVC2017CompileFlags = -DWINAPI_FAMILY=WINAPI_FAMILY_APP -DWINDLL -D_UNICODE -DUNICODE -DWRL_NO_DEFAULT_LIB -FS
-		LDFLAGS += -APPCONTAINER -NXCOMPAT -DYNAMICBASE -MANIFEST:NO -LTCG -OPT:REF -SUBSYSTEM:CONSOLE -MANIFESTUAC:NO -OPT:ICF -ERRORREPORT:PROMPT -NOLOGO -TLBID:1 -DEBUG:FULL -WINMD:NO
-		LIBS += WindowsApp.lib
-	endif
-
-	TargetArchMoniker = $(subst $(WinPartition)_,,$(PlatformSuffix))
-
-    ifneq (,$(findstring x64,$(TargetArchMoniker)))
-		MSVC2017CompileFlags += -D__x86_64__
-	endif
-    ifneq (,$(findstring x86,$(TargetArchMoniker)))
-		MSVC2017CompileFlags += -D__i386__
-	endif
-    ifneq (,$(findstring arm,$(TargetArchMoniker)))
-		MSVC2017CompileFlags += -D__arm__
-	endif
-
-	CFLAGS += $(MSVC2017CompileFlags)
-	CXXFLAGS += $(MSVC2017CompileFlags) -EHsc
-
-	CC  = cl.exe
-	CXX = cl.exe
-	LD = link.exe
-
-	reg_query = $(call filter_out2,$(subst $2,,$(shell reg query "$2" -v "$1" 2>nul)))
-	fix_path = $(subst $(SPACE),\ ,$(subst \,/,$1))
-
-	ProgramFiles86w := $(shell cmd /c "echo %PROGRAMFILES(x86)%")
-	ProgramFiles86 := $(shell cygpath "$(ProgramFiles86w)")
-
-	WindowsSdkDir ?= $(call reg_query,InstallationFolder,HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v10.0)
-	WindowsSdkDir ?= $(call reg_query,InstallationFolder,HKEY_CURRENT_USER\SOFTWARE\Wow6432Node\Microsoft\Microsoft SDKs\Windows\v10.0)
-	WindowsSdkDir ?= $(call reg_query,InstallationFolder,HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Microsoft SDKs\Windows\v10.0)
-	WindowsSdkDir ?= $(call reg_query,InstallationFolder,HKEY_CURRENT_USER\SOFTWARE\Microsoft\Microsoft SDKs\Windows\v10.0)
-	WindowsSdkDir := $(WindowsSdkDir)
-
-	WindowsSDKVersion ?= $(firstword $(foreach folder,$(subst $(subst \,/,$(WindowsSdkDir)Include/),,$(wildcard $(call fix_path,$(WindowsSdkDir)Include\*))),$(if $(wildcard $(call fix_path,$(WindowsSdkDir)Include/$(folder)/um/Windows.h)),$(folder),)))$(BACKSLASH)
-	WindowsSDKVersion := $(WindowsSDKVersion)
-
-	VsInstallBuildTools = $(ProgramFiles86)/Microsoft Visual Studio/2017/BuildTools
-	VsInstallEnterprise = $(ProgramFiles86)/Microsoft Visual Studio/2017/Enterprise
-	VsInstallProfessional = $(ProgramFiles86)/Microsoft Visual Studio/2017/Professional
-	VsInstallCommunity = $(ProgramFiles86)/Microsoft Visual Studio/2017/Community
-
-	VsInstallRoot ?= $(shell if [ -d "$(VsInstallBuildTools)" ]; then echo "$(VsInstallBuildTools)"; fi)
-	ifeq ($(VsInstallRoot), )
-		VsInstallRoot = $(shell if [ -d "$(VsInstallEnterprise)" ]; then echo "$(VsInstallEnterprise)"; fi)
-	endif
-	ifeq ($(VsInstallRoot), )
-		VsInstallRoot = $(shell if [ -d "$(VsInstallProfessional)" ]; then echo "$(VsInstallProfessional)"; fi)
-	endif
-	ifeq ($(VsInstallRoot), )
-		VsInstallRoot = $(shell if [ -d "$(VsInstallCommunity)" ]; then echo "$(VsInstallCommunity)"; fi)
-	endif
-	VsInstallRoot := $(VsInstallRoot)
-
-	VcCompilerToolsVer := $(shell cat "$(VsInstallRoot)/VC/Auxiliary/Build/Microsoft.VCToolsVersion.default.txt" | grep -o '[0-9\.]*')
-	VcCompilerToolsDir := $(VsInstallRoot)/VC/Tools/MSVC/$(VcCompilerToolsVer)
-
-	WindowsSDKSharedIncludeDir := $(shell cygpath -w "$(WindowsSdkDir)\Include\$(WindowsSDKVersion)\shared")
-	WindowsSDKUCRTIncludeDir := $(shell cygpath -w "$(WindowsSdkDir)\Include\$(WindowsSDKVersion)\ucrt")
-	WindowsSDKUMIncludeDir := $(shell cygpath -w "$(WindowsSdkDir)\Include\$(WindowsSDKVersion)\um")
-	WindowsSDKUCRTLibDir := $(shell cygpath -w "$(WindowsSdkDir)\Lib\$(WindowsSDKVersion)\ucrt\$(TargetArchMoniker)")
-	WindowsSDKUMLibDir := $(shell cygpath -w "$(WindowsSdkDir)\Lib\$(WindowsSDKVersion)\um\$(TargetArchMoniker)")
-
-	# For some reason the HostX86 compiler doesn't like compiling for x64
-	# ("no such file" opening a shared library), and vice-versa.
-	# Work around it for now by using the strictly x86 compiler for x86, and x64 for x64.
-	# NOTE: What about ARM?
-	ifneq (,$(findstring x64,$(TargetArchMoniker)))
-		VCCompilerToolsBinDir := $(VcCompilerToolsDir)\bin\HostX64
-	else
-		VCCompilerToolsBinDir := $(VcCompilerToolsDir)\bin\HostX86
-	endif
-
-	PATH := $(shell IFS=$$'\n'; cygpath "$(VCCompilerToolsBinDir)/$(TargetArchMoniker)"):$(PATH)
-	PATH := $(PATH):$(shell IFS=$$'\n'; cygpath "$(VsInstallRoot)/Common7/IDE")
-	INCLUDE := $(shell IFS=$$'\n'; cygpath -w "$(VcCompilerToolsDir)/include")
-	LIB := $(shell IFS=$$'\n'; cygpath -w "$(VcCompilerToolsDir)/lib/$(TargetArchMoniker)")
-
-	export INCLUDE := $(INCLUDE);$(WindowsSDKSharedIncludeDir);$(WindowsSDKUCRTIncludeDir);$(WindowsSDKUMIncludeDir)
-	export LIB := $(LIB);$(WindowsSDKUCRTLibDir);$(WindowsSDKUMLibDir)
-	TARGET := $(TARGET_NAME)_libretro.dll
-	PSS_STYLE :=2
-	LDFLAGS += -DLL
 
 # Windows
 else
@@ -472,44 +360,24 @@ ifeq ($(HAVE_JIT),1)
    LDFLAGS += -ljit
 endif
 
-CXXFLAGS += $(FLAGS)
+CXXFLAGS += $(FLAGS) -std=c++11
 CFLAGS   += $(FLAGS)
 
-ifeq (,$(findstring msvc,$(platform)))
-    CXXFLAGS += -std=c++11
-endif
-
-OBJOUT   = -o
-LINKOUT  = -o 
-
-ifneq (,$(findstring msvc,$(platform)))
-	OBJOUT = -Fo
-	LINKOUT = -out:
-	LD = link.exe
-else
-	LD = $(CXX)
-endif
-
 $(TARGET): $(OBJECTS)
 ifeq ($(STATIC_LINKING), 1)
 	$(AR) rcs $@ $(OBJECTS)
 else
-	$(LD) $(LINKOUT)$@ $^ $(LDFLAGS) $(GL_LIB) $(LIBS)
+	$(CXX) -o $@ $^ $(LDFLAGS) $(GL_LIB)
 endif
 
 %.o: %.cpp
-	$(CXX) -c $(OBJOUT)$@ $< $(CXXFLAGS)
+	$(CXX) -c -o $@ $< $(CXXFLAGS)
 
 %.o: %.c
-	$(CC) -c $(OBJOUT)$@ $< $(CFLAGS)
+	$(CC) -c -o $@ $< $(CFLAGS)
 
 clean:
 	rm -f $(TARGET) $(OBJECTS)
 
-install:
-	install -D -m 755 $(TARGET) $(DESTDIR)$(libdir)/$(LIBRETRO_INSTALL_DIR)/$(TARGET)
-
-uninstall:
-	rm $(DESTDIR)$(libdir)/$(LIBRETRO_INSTALL_DIR)/$(TARGET)
+.PHONY: clean
 
-.PHONY: clean install uninstall
